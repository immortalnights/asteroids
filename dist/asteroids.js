(()=>{"use strict";var t,i,e={913:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(147),s=function(){function t(t){this.scene=new o.default(t),this.animationFrameId=0,this.lastFrameTime=0,this.onFrame=this.onFrame.bind(this)}return t.prototype.resize=function(){var t=this.scene.canvas.getBoundingClientRect();this.scene.canvas.width=t.width,this.scene.canvas.height=t.height},t.prototype.play=function(){this.scene.activate()},t.prototype.end=function(){this.scene.deactivate()},t.prototype.start=function(){this.scene.create(),this.onFrame(0)},t.prototype.stop=function(){window.cancelAnimationFrame(this.animationFrameId)},t.prototype.onFrame=function(t){var i=(t-this.lastFrameTime)/1e3;this.lastFrameTime=t,this.scene.update(i),this.scene.render(i),this.animationFrameId=window.requestAnimationFrame(this.onFrame)},t}();i.default=s},208:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(993),s=function(){function t(t,i,e,s,n){void 0===n&&(n=2),this.scene=t,this.active=!0,this.pooled=!0,this.position=new o.default(i,e),this.size=n,this.velocity=s}return t.prototype.getBoundingBox=function(){var t=this.position.x,i=this.position.y;return{x:t,y:i,top:i-this.size/2,right:t+this.size/2,bottom:i+this.size/2,left:t-this.size/2}},t.prototype.update=function(t){if(this.active){var i=this.velocity.clone().multiply(t,t);this.position.add(i);var e=2*this.size;(this.position.x<-e||this.position.x>this.scene.width+e||this.position.y<-e||this.position.y>this.scene.height+e)&&this.scene.destroyGameObject(this)}},t.prototype.render=function(t){this.active&&(t.save(),t.fillStyle="#ffffff",t.beginPath(),t.arc(this.position.x,this.position.y,this.size,0,360,!1),t.fill(),t.closePath(),t.restore())},t}();i.default=s},489:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0});var e=function(){function t(t){this.canvas=t,this.pointer={x:0,y:0,in:!1},this.turnToMouse=!1,this.turn=0,this.accelerate=0,this.shoot=!1,this.changed=!1,t.tabIndex=0,t.focus(),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseEnter=this.onMouseEnter.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this)}return t.prototype.bind=function(){window.addEventListener("mousedown",this.onMouseDown),this.canvas.addEventListener("mouseenter",this.onMouseEnter),this.canvas.addEventListener("mouseleave",this.onMouseLeave),this.canvas.addEventListener("mousemove",this.onMouseMove),window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)},t.prototype.unbind=function(){window.removeEventListener("mousedown",this.onMouseDown),this.canvas.removeEventListener("mouseenter",this.onMouseEnter),this.canvas.removeEventListener("mouseleave",this.onMouseLeave),this.canvas.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)},t.prototype.destroy=function(){this.unbind()},t.prototype.onMouseDown=function(t){t.preventDefault(),this.turnToMouse=!0,this.shoot=!0,this.changed=!0},t.prototype.onMouseEnter=function(t){t.preventDefault(),this.pointer.in=!0},t.prototype.onMouseLeave=function(t){t.preventDefault(),this.pointer.in=!1},t.prototype.onMouseMove=function(t){t.preventDefault();var i=this.canvas.getBoundingClientRect(),e=this.canvas.width/i.width,o=this.canvas.height/i.height;this.pointer.x=(t.clientX-i.left)*e,this.pointer.y=(t.clientY-i.top)*o},t.prototype.onKeyDown=function(t){t.preventDefault(),"w"===t.key||"ArrowUp"===t.key?this.accelerate=1:"s"===t.key||"ArrowDown"===t.key?this.accelerate=-1:"a"===t.key||"ArrowLeft"===t.key?(this.turn=-1,this.turnToMouse=!1):"d"===t.key||"ArrowRight"===t.key?(this.turn=1,this.turnToMouse=!1):" "===t.key&&(this.shoot=!0),this.changed=!0},t.prototype.onKeyUp=function(t){"w"===t.key||"ArrowUp"===t.key||"s"===t.key||"ArrowDown"===t.key?this.accelerate=0:"a"===t.key||"ArrowLeft"===t.key||"d"===t.key||"ArrowRight"===t.key?this.turn=0:" "===t.key&&(this.shoot=!1),this.changed=!0},t}();i.default=e},490:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Angle=i.wrap=i.clamp=i.dec=i.inc=void 0;var e=2*Math.PI;i.inc=function(t,i,e){return t+=i,Math.min(t,e)},i.dec=function(t,i,e){return t-=i,Math.max(t,e)},i.clamp=function(t,i,e){return t<i&&(t=i),t>e&&(t=e),t},i.wrap=function(t,i,e){return t<i&&(t=e+t%e),t>e&&(t=i+t%e),t},i.Angle={toDegrees:function(t){return t*(180/Math.PI)},toRadians:function(t){return t*(Math.PI/180)},between:function(t,i){return Math.atan2(i.y-t.y,i.x-t.x)*(180/Math.PI)},rotateTo:function(t,i,o){return void 0===o&&(o=.05),t!==i&&(Math.abs(i-t)<=o||Math.abs(i-t)>=e-o?t=i:(Math.abs(i-t)>Math.PI&&(i<t?i+=e:i-=e),i>t?t+=o:i<t&&(t-=o))),t}},i.default={inc:i.inc,dec:i.dec,clamp:i.clamp,wrap:i.wrap,Angle:i.Angle}},217:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.applyFriction=void 0;var o=e(993);i.applyFriction=function(t,i){var e,o;0!==t.x&&0!==i.x&&(e=t.x<0,(o=Math.abs(t.x)*(1-i.x))<0&&(o=0),t.x=e?-o:o),0!==t.y&&0!==i.y&&(e=t.y<0,(o=Math.abs(t.y)*(1-i.y))<0&&(o=0),t.y=e?-o:o)};var s=function(){function t(t,i,e,s){this.life=100,this.position=new o.default(t,i),this.velocity=new o.default,this.friction=new o.default,this.size=e,this.color=s,this.active=!0}return t.prototype.clone=function(){var i=new t(this.position.x,this.position.y,this.size,this.color);return i.life=this.life,i.position=this.position.clone(),i.velocity=this.velocity.clone(),i.friction=this.friction.clone(),i.size=this.size,i.color=this.color,i.active=this.active,i},t.prototype.reset=function(t,i){this.active=!0,this.life=100,t&&i&&(this.position.x=t,this.position.y=i)},t.prototype.setPosition=function(t,i){this.position.x=t,this.position.y=i},t.prototype.setVelocity=function(t,i){this.velocity.x=t,this.velocity.y=i},t.prototype.setFriction=function(t,i){this.friction.x=t,this.friction.y=i},t.prototype.update=function(t,e){this.life-=1,this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.life<0&&(this.active=!1),(this.position.x>e.width||this.position.x<0||this.position.y>e.height||this.position.y<0)&&(this.active=!1),(0,i.applyFriction)(this.velocity,this.friction)},t.prototype.render=function(t){var i=this.life/100;t.beginPath(),t.arc(this.position.x,this.position.y,this.size,0,2*Math.PI,!1),t.fillStyle="rgb(".concat(this.color[0],", ").concat(this.color[1],", ").concat(this.color[2],", ").concat(i,")"),t.fill()},t}();i.default=s},587:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Thruster=i.Explosion=void 0;var o=e(993),s=e(217),n=e(231),a=function(){function t(t,i,e){void 0===e&&(e=4),this.active=!0,this.position=new o.default(t,i),this.particles=[];for(var a=10*e,r=360/a,h=0;h<a;h++){var c=r*h*(Math.PI/180),u=this.position.x+0*Math.cos(c),p=this.position.y+0*Math.sin(c),l=n.default.floatBetween(2,6),d=new s.default(u,p,2,[140,85,35]);d.setVelocity(Math.cos(c)*l,Math.sin(c)*l),d.setFriction(.05,.05),this.particles.push(d)}}return t.prototype.update=function(t,i){var e=this;this.active&&(this.particles.forEach((function(o){o.update(t,i),e.active=Boolean(e.active&&o.active)})),this.active||console.log("dead"))},t.prototype.render=function(t){this.active&&this.particles.forEach((function(i){return i.render(t)}))},t}();i.Explosion=a;var r=function(){function t(t,i,e,n,a,r){void 0===e&&(e=4),void 0===n&&(n=0),void 0===a&&(a=.1),void 0===r&&(r=[140,85,35,1]),this.active=!0,this.burn=!0,this.intensity=e,this.angle=0===n?360:n,this.spread=a,this.position=new o.default(t,i),this.pool=[],this.particles=[],this.color=r;for(var h=0;h<50;h++)this.pool.push(new s.default(this.position.x,this.position.y,2,r))}return t.prototype.addParticle=function(){var t,i=360*n.default.floatBetween(1-this.spread,1+this.spread),e=(this.angle+i)*(Math.PI/180),o=n.default.floatBetween(this.intensity/2,this.intensity);0===this.pool.length?t=new s.default(this.position.x,this.position.y,2,[140,85,35]):(t=this.pool.pop()).reset(this.position.x,this.position.y),t.life=n.default.between(40,100),t.setVelocity(Math.cos(e)*o,Math.sin(e)*o),t.setFriction(.05,.05),this.particles.push(t)},t.prototype.stop=function(){this.burn=!1},t.prototype.kill=function(){var t=this;this.active=!1,this.particles.forEach((function(i){i.active=!1,t.pool.push(i)})),this.particles.length=0},t.prototype.update=function(t,i){var e=this;if(this.active){this.burn&&this.addParticle();var o=[];this.particles.forEach((function(e,s){e.update(t,i),!1===e.active&&o.push(s)})),o.forEach((function(t){e.particles.splice(t,1).forEach((function(t){return e.pool.push(t)}))}))}},t.prototype.render=function(t){this.active&&this.particles.forEach((function(i){return i.render(t)}))},t}();i.Thruster=r},231:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.pick=i.floatBetween=i.between=void 0,i.between=function(t,e){return Math.floor((0,i.floatBetween)(t,e))},i.floatBetween=function(t,i){return Math.random()*(t-i)+i},i.pick=function(t){return t[(0,i.between)(0,t.length)]},i.default={between:i.between,floatBetween:i.floatBetween,pick:i.pick}},541:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(993),s=e(490),n=e(231),a=function(){function t(t,i,e,s){void 0===s&&(s=28),this.scene=t,this.active=!0,this.position=new o.default(i,e),this.size=s,this.angle=0,this.rotationSpeed=n.default.floatBetween(.1,2),this.velocity=new o.default(n.default.between(-200,200),n.default.between(-200,200)),this.points=function(t,i,e,s){void 0===e&&(e=20),void 0===s&&(s=8);var a=function(t,i,e,s){for(var n=6.28/t,a=0,r=[],h=0;h<t;h++){var c=new o.default(0+s*Math.cos(a),0+s*Math.sin(a));r.push(c),a+=n}return r}(s,0,0,e);return a.forEach((function(t){t.x+=n.default.between(-.25*e,.25*e),t.y+=n.default.between(-.25*e,.25*e)})),a}(0,0,this.size,12)}return Object.defineProperty(t.prototype,"radians",{get:function(){return this.angle*Math.PI/180},enumerable:!1,configurable:!0}),t.prototype.getBoundingBox=function(){var t=this.position.x+this.size/2,i=this.position.y+this.size/2;return{x:t,y:i,top:i-this.size,right:t+this.size,bottom:i+this.size,left:t-this.size}},t.prototype.update=function(t){var i=this.velocity.clone().multiply(t,t);this.position.add(i),this.position.x=s.default.wrap(this.position.x,-2*this.size,this.scene.width+2*this.size),this.position.y=s.default.wrap(this.position.y,-2*this.size,this.scene.height+2*this.size),this.angle+=this.rotationSpeed},t.prototype.render=function(t){t.save(),t.strokeStyle="#aaaaaa",t.fillStyle="#333333",t.translate(this.position.x+this.size/2,this.position.y+this.size/2),t.rotate(this.radians),t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y);for(var i=1;i<this.points.length;i++){var e=this.points[i];t.lineTo(e.x,e.y)}t.closePath(),t.stroke(),t.fill(),t.setTransform(1,0,0,1,0,0),t.restore()},t}();i.default=a},147:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(489),s=e(490),n=e(841),a=e(208),r=e(541),h=e(934),c=e(231),u=e(993),p=e(587),l=function(){function t(t,i,e){this.a=t,this.b=i,this.callback=e}return t.prototype.check=function(){var t=this;return this.a.forEach((function(i){i.active&&t.b.forEach((function(e){e.active&&function(t,i){var e=t.getBoundingBox(),o=i.getBoundingBox();return!(e.right<=o.left||e.bottom<=o.top||e.x>=o.right||e.y>=o.bottom)}(i,e)&&t.callback(i,e)}))})),[]},t}(),d=function(){function t(t){this.canvas=t,this.context=t.getContext("2d"),this.input=new o.default(this.canvas),this.displayList=[],this.ship=null,this.rocks=[],this.bullets=[],this.explosions=[],this.colliders=[]}return t.prototype.activate=function(){this.input.bind()},t.prototype.deactivate=function(){this.input.unbind()},Object.defineProperty(t.prototype,"width",{get:function(){return this.canvas.width},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.canvas.height},enumerable:!1,configurable:!0}),t.prototype.addGameObject=function(t,i,e){if(void 0===i&&(i=void 0),void 0===e&&(e=void 0),i){var o=this.displayList.indexOf(i);this.displayList.splice(o-1,0,t)}else e?(o=this.displayList.indexOf(e),this.displayList.splice(o,0,t)):this.displayList.push(t)},t.prototype.addCollider=function(t,i,e){t=Array.isArray(t)?t:[t],i=Array.isArray(i)?i:[i];var o=new l(t,i,e);return this.colliders.push(o),o},t.prototype.destroyGameObject=function(t){var i=this.displayList.indexOf(t);t.pooled&&(t.active=!1),i>=0&&this.displayList.splice(i,1)},t.prototype.create=function(){this.ship=new n.default(this,this.width/2,this.height/2),this.addGameObject(new h.default(this));for(var t=0;t<10;t++){var i=new r.default(this,c.default.between(0,this.width),c.default.between(0,this.height));this.addGameObject(i),this.rocks.push(i)}this.addGameObject(this.ship),this.addCollider(this.ship,this.rocks,this.onShipCrash.bind(this)),this.addCollider(this.bullets,this.rocks,this.onBulletHitRock.bind(this))},t.prototype.destroy=function(){this.input.destroy()},t.prototype.update=function(t){var i=this,e=this.ship;if(this.input.changed){if(e.turn(this.input.turn),e.turnTo(null),1===this.input.accelerate)e.accelerate();else if(-1===this.input.accelerate)e.brake();else if(!0===this.input.shoot){if(e.fire()){var o=new u.default(600,0);o.rotate(e.radians);var n=new a.default(this,e.position.x,e.position.y,o);this.bullets.push(n),this.addGameObject(n,e)}this.input.shoot=!1}this.input.changed=!1}if(this.input.turnToMouse&&this.input.pointer.in){var r=s.default.Angle.between(e.position,this.input.pointer);e.turnTo(r)}var h=[];this.explosions.forEach((function(e,o){e.update(t,i.canvas),!1===e.active&&h.push(o)})),h.forEach((function(t){return i.explosions.splice(t,1)})),this.colliders.forEach((function(t){t.check()}))},t.prototype.render=function(t){var i=this,e=this.context;e.clearRect(0,0,this.canvas.width,this.canvas.height),this.explosions.forEach((function(t){return t.render(e)})),this.displayList.forEach((function(e){e.update(t),e.render(i.context)}));var o=this.ship;e.fillStyle="#ffffff",e.font="normal 12px monospace",["Mouse    ".concat(this.input.pointer.x.toFixed(2),", ").concat(this.input.pointer.y.toFixed(2)),"Speed    ".concat(o.speed.toFixed(2),", ").concat(o.velocity.x.toFixed(2),", ").concat(o.velocity.y.toFixed(2)),"Rotation ".concat(o.radians.toFixed(2),", ").concat(s.default.Angle.toRadians(o.rotateTo||0).toFixed(2),", ").concat(o.rotationSpeed.toFixed(2)),"Weapon   ".concat(o.weaponCooldown.toFixed(2)),"Controls ".concat(this.input.accelerate,", ").concat(this.input.turn,", ").concat(this.input.shoot),"Renderer ".concat(this.displayList.length)].forEach((function(t,i){e.fillText(t,12,14+12*i)}))},t.prototype.onShipCrash=function(t,i){return t=t,!0},t.prototype.onBulletHitRock=function(t,i){var e=this;this.destroyGameObject(t);var o=this.bullets.indexOf(t);this.bullets.splice(o,1);var s=i;this.destroyGameObject(i);var n=this.rocks.indexOf(s);if(this.rocks.splice(n,1),s.size>8){var a=Math.max(s.size/2,8);[new r.default(this,i.position.x,i.position.y,a),new r.default(this,i.position.x,i.position.y,a)].forEach((function(t){e.addGameObject(t),e.rocks.push(t)}))}var h=new p.Explosion(i.position.x,i.position.y,s.size/2);return this.explosions.push(h),!0},t}();i.default=d},841:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(993),s=e(490),n=e(587),a=function(){function t(t,i,e,s){void 0===s&&(s=20),this.scene=t,this.active=!0,this.position=new o.default(i,e),this.velocity=new o.default(0,0),this.size=s,this._angle=0,this.speed=25,this.thruster=new n.Thruster(this.position.x,this.position.y,3,180,.05,[200,200,200,1]),this.thruster.burn=!1,this.rotateTo=null,this.rotationSpeed=0,this.weaponCooldown=0}return Object.defineProperty(t.prototype,"angle",{get:function(){return this._angle},set:function(t){this._angle=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radians",{get:function(){return s.default.Angle.toRadians(this.angle)},enumerable:!1,configurable:!0}),t.prototype.turn=function(t){switch(t){case-1:this.rotationSpeed=-5;break;case 0:this.rotationSpeed=0;break;case 1:this.rotationSpeed=5}},t.prototype.turnTo=function(t){this.rotateTo=t},t.prototype.accelerate=function(){var t=Math.cos(this.radians)*this.speed;(t>0&&this.velocity.x<300||t<0&&this.velocity.x>-300)&&(this.velocity.x+=t);var i=Math.sin(this.radians)*this.speed;(i>0&&this.velocity.y<300||i<0&&this.velocity.y>-300)&&(this.velocity.y+=i)},t.prototype.brake=function(){this.velocity.x>.1?this.velocity.x-=Math.cos(this.radians)*this.speed:this.velocity.x<-.1&&(this.velocity.x+=Math.cos(this.radians)*this.speed),this.velocity.y>.1?this.velocity.y-=Math.sin(this.radians)*this.speed:this.velocity.y<-.1&&(this.velocity.y+=Math.sin(this.radians)*this.speed)},t.prototype.fire=function(){var t=0===this.weaponCooldown;return t&&(this.weaponCooldown=.125),t},t.prototype.getBoundingBox=function(){var t=this.position.x,i=this.position.y;return{x:t,y:i,top:i-this.size/2,right:t+this.size,bottom:i+this.size/2,left:t-this.size/2}},t.prototype.update=function(t){0!=this.rotationSpeed?this.angle+=this.rotationSpeed:null!=this.rotateTo&&(this.angle=s.default.Angle.toDegrees(s.default.Angle.rotateTo(this.radians,s.default.Angle.toRadians(this.rotateTo)))),this.weaponCooldown=s.default.dec(this.weaponCooldown,t,0);var i=this.velocity.clone().multiply(t,t);this.position.add(i),this.position.x=s.default.wrap(this.position.x,-2*this.size,this.scene.canvas.width+2*this.size),this.position.y=s.default.wrap(this.position.y,-2*this.size,this.scene.canvas.height+2*this.size),this.thruster.burn=0!==i.x&&0!==i.y,this.thruster.angle=180+this.angle,this.thruster.position.x=this.position.x,this.thruster.position.y=this.position.y,this.thruster.update(t,this.scene.canvas)},t.prototype.render=function(t){var i=[new o.default(this.size,0),new o.default(-this.size/2,this.size/2),new o.default(-this.size/2,-this.size/2)];this.thruster.render(t),t.save(),t.strokeStyle="#aaaaaa",t.fillStyle="#999999",t.translate(this.position.x,this.position.y),t.rotate(this.radians),t.beginPath(),t.moveTo(i[0].x,i[0].y),t.lineTo(i[1].x,i[1].y),t.lineTo(i[2].x,i[2].y),t.closePath(),t.stroke(),t.fill(),t.setTransform(1,0,0,1,0,0),t.restore()},t}();i.default=a},934:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(231),s=function(){function t(t){this.scene=t,this.stars=[];for(var i=0;i<300;i++){var e=o.default.between(1,2),s=o.default.floatBetween(.1,1),n=o.default.between(0,t.width),a=o.default.between(0,t.height),r=o.default.pick(["255, 255, 255","128, 0, 128","34, 34, 153"]);this.stars.push({x:n,y:a,size:e,color:r,alpha:s})}}return t.prototype.update=function(t){},t.prototype.render=function(){var t=this.scene.context;t.save(),this.stars.forEach((function(i){t.fillStyle="rgba(".concat(i.color,", ").concat(i.alpha,")"),t.fillRect(i.x,i.y,i.size,i.size)})),t.restore()},t}();i.default=s},993:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0});var e=function(){function t(t,i){void 0===t&&(t=0),void 0===i&&(i=0),this.x=t,this.y=i}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.set=function(t,i){this.x=t,this.y=i},t.prototype.add=function(t,i){return void 0===i&&(i=void 0),void 0===i&&(i=t.y,t=t.x),this.x+=t,this.y+=i,this},t.prototype.multiply=function(t,i){return void 0===i&&(i=void 0),void 0===i&&(i=t.y,t=t.x),this.x*=t,this.y*=i,this},t.prototype.rotate=function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(i*this.x-e*this.y,e*this.x+i*this.y)},t.prototype.setToPolar=function(t,i){return void 0===i&&(i=1),this.x=Math.cos(t)*i,this.y=Math.sin(t)*i,this},t}();i.default=e}},o={};i=function t(i){var s=o[i];if(void 0!==s)return s.exports;var n=o[i]={exports:{}};return e[i](n,n.exports,t),n.exports}(913),document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementsByTagName("canvas")[0];(t=new i.default(e)).resize(),t.start(),window.addEventListener("resize",(function(){t.resize()}))})),window.AsteroidsNS=window.AsteroidsNS||{play:function(){null==t||t.play()},end:function(){null==t||t.end()}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,