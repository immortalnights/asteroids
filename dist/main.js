(()=>{"use strict";var t,i={913:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(147),s=function(){function t(t){this.scene=new o.default(t),this.animationFrameId=0,this.lastFrameTime=0,this.onFrame=this.onFrame.bind(this)}return t.prototype.resize=function(){var t=this.scene.canvas.getBoundingClientRect();this.scene.canvas.width=t.width,this.scene.canvas.height=t.height},t.prototype.play=function(){this.scene.create(),this.onFrame(0)},t.prototype.onFrame=function(t){var i=(t-this.lastFrameTime)/1e3;this.lastFrameTime=t,this.scene.update(i),this.scene.render(i),this.animationFrameId=window.requestAnimationFrame(this.onFrame)},t.prototype.stop=function(){window.cancelAnimationFrame(this.animationFrameId)},t}();i.default=s},208:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(993),s=function(){function t(t,i,e,s,n){void 0===n&&(n=2),this.scene=t,this.active=!0,this.pooled=!0,this.position=new o.default(i,e),this.size=n,this.velocity=s}return t.prototype.getBoundingBox=function(){var t=this.position.x,i=this.position.y;return{x:t,y:i,top:i-this.size/2,right:t+this.size/2,bottom:i+this.size/2,left:t-this.size/2}},t.prototype.update=function(t){if(this.active){var i=this.velocity.clone().multiply(t,t);this.position.add(i);var e=2*this.size;(this.position.x<-e||this.position.x>this.scene.width+e||this.position.y<-e||this.position.y>this.scene.height+e)&&this.scene.destroyGameObject(this)}},t.prototype.render=function(t){this.active&&(t.save(),t.fillStyle="#ffffff",t.beginPath(),t.arc(this.position.x,this.position.y,this.size,0,360,!1),t.fill(),t.closePath(),t.restore())},t}();i.default=s},489:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0});var e=function(){function t(t){this.canvas=t,this.pointer={x:0,y:0,in:!1},this.turnToMouse=!1,this.turn=0,this.accelerate=0,this.shoot=!1,this.changed=!1,t.tabIndex=0,t.focus(),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseEnter=this.onMouseEnter.bind(this),this.onMouseLeave=this.onMouseLeave.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this),window.addEventListener("mousedown",this.onMouseDown),this.canvas.addEventListener("mouseenter",this.onMouseEnter),this.canvas.addEventListener("mouseleave",this.onMouseLeave),this.canvas.addEventListener("mousemove",this.onMouseMove),window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)}return t.prototype.onMouseDown=function(t){t.preventDefault(),this.turnToMouse=!0,this.shoot=!0,this.changed=!0},t.prototype.onMouseEnter=function(t){t.preventDefault(),this.pointer.in=!0},t.prototype.onMouseLeave=function(t){t.preventDefault(),this.pointer.in=!1},t.prototype.onMouseMove=function(t){t.preventDefault();var i=this.canvas.getBoundingClientRect(),e=this.canvas.width/i.width,o=this.canvas.height/i.height;this.pointer.x=(t.clientX-i.left)*e,this.pointer.y=(t.clientY-i.top)*o},t.prototype.onKeyDown=function(t){t.preventDefault(),"w"===t.key||"ArrowUp"===t.key?this.accelerate=1:"s"===t.key||"ArrowDown"===t.key?this.accelerate=-1:"a"===t.key||"ArrowLeft"===t.key?(this.turn=-1,this.turnToMouse=!1):"d"===t.key||"ArrowRight"===t.key?(this.turn=1,this.turnToMouse=!1):" "===t.key&&(this.shoot=!0),this.changed=!0},t.prototype.onKeyUp=function(t){"w"===t.key||"ArrowUp"===t.key||"s"===t.key||"ArrowDown"===t.key?this.accelerate=0:"a"===t.key||"ArrowLeft"===t.key||"d"===t.key||"ArrowRight"===t.key?this.turn=0:" "===t.key&&(this.shoot=!1),this.changed=!0},t.prototype.destroy=function(){window.removeEventListener("mousedown",this.onMouseDown),this.canvas.removeEventListener("mouseenter",this.onMouseEnter),this.canvas.removeEventListener("mouseleave",this.onMouseLeave),this.canvas.removeEventListener("mousemove",this.onMouseMove),window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)},t}();i.default=e},490:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Angle=i.wrap=i.clamp=i.dec=i.inc=void 0;var e=2*Math.PI;i.inc=function(t,i,e){return t+=i,Math.min(t,e)},i.dec=function(t,i,e){return t-=i,Math.max(t,e)},i.clamp=function(t,i,e){return t<i&&(t=i),t>e&&(t=e),t},i.wrap=function(t,i,e){return t<i&&(t=e+t%e),t>e&&(t=i+t%e),t},i.Angle={toDegrees:function(t){return t*(180/Math.PI)},toRadians:function(t){return t*(Math.PI/180)},between:function(t,i){return Math.atan2(i.y-t.y,i.x-t.x)*(180/Math.PI)},rotateTo:function(t,i,o){return void 0===o&&(o=.05),t!==i&&(Math.abs(i-t)<=o||Math.abs(i-t)>=e-o?t=i:(Math.abs(i-t)>Math.PI&&(i<t?i+=e:i-=e),i>t?t+=o:i<t&&(t-=o))),t}},i.default={inc:i.inc,dec:i.dec,clamp:i.clamp,wrap:i.wrap,Angle:i.Angle}},217:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.applyFriction=void 0;var o=e(993);i.applyFriction=function(t,i){var e,o;0!==t.x&&0!==i.x&&(e=t.x<0,(o=Math.abs(t.x)*(1-i.x))<0&&(o=0),t.x=e?-o:o),0!==t.y&&0!==i.y&&(e=t.y<0,(o=Math.abs(t.y)*(1-i.y))<0&&(o=0),t.y=e?-o:o)};var s=function(){function t(t,i,e,s){this.life=100,this.position=new o.default(t,i),this.velocity=new o.default,this.friction=new o.default,this.size=e,this.color=s,this.active=!0}return t.prototype.clone=function(){var i=new t(this.position.x,this.position.y,this.size,this.color);return i.life=this.life,i.position=this.position.clone(),i.velocity=this.velocity.clone(),i.friction=this.friction.clone(),i.size=this.size,i.color=this.color,i.active=this.active,i},t.prototype.reset=function(t,i){this.active=!0,this.life=100,t&&i&&(this.position.x=t,this.position.y=i)},t.prototype.setPosition=function(t,i){this.position.x=t,this.position.y=i},t.prototype.setVelocity=function(t,i){this.velocity.x=t,this.velocity.y=i},t.prototype.setFriction=function(t,i){this.friction.x=t,this.friction.y=i},t.prototype.update=function(t,e){this.life-=1,this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.life<0&&(this.active=!1),(this.position.x>e.width||this.position.x<0||this.position.y>e.height||this.position.y<0)&&(this.active=!1),(0,i.applyFriction)(this.velocity,this.friction)},t.prototype.render=function(t){var i=this.life/100;t.beginPath(),t.arc(this.position.x,this.position.y,this.size,0,2*Math.PI,!1),t.fillStyle="rgb(".concat(this.color[0],", ").concat(this.color[1],", ").concat(this.color[2],", ").concat(i,")"),t.fill()},t}();i.default=s},587:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.Thruster=i.Explosion=void 0;var o=e(993),s=e(217),n=e(231),a=function(){function t(t,i,e){void 0===e&&(e=4),this.active=!0,this.position=new o.default(t,i),this.particles=[];for(var a=10*e,h=360/a,r=0;r<a;r++){var c=h*r*(Math.PI/180),u=this.position.x+0*Math.cos(c),p=this.position.y+0*Math.sin(c),l=n.default.floatBetween(2,6),d=new s.default(u,p,2,[140,85,35]);d.setVelocity(Math.cos(c)*l,Math.sin(c)*l),d.setFriction(.05,.05),this.particles.push(d)}}return t.prototype.update=function(t,i){var e=this;this.active&&(this.particles.forEach((function(o){o.update(t,i),e.active=Boolean(e.active&&o.active)})),this.active||console.log("dead"))},t.prototype.render=function(t){this.active&&this.particles.forEach((function(i){return i.render(t)}))},t}();i.Explosion=a;var h=function(){function t(t,i,e,n,a,h){void 0===e&&(e=4),void 0===n&&(n=0),void 0===a&&(a=.1),void 0===h&&(h=[140,85,35,1]),this.active=!0,this.burn=!0,this.intensity=e,this.angle=0===n?360:n,this.spread=a,this.position=new o.default(t,i),this.pool=[],this.particles=[],this.color=h;for(var r=0;r<50;r++)this.pool.push(new s.default(this.position.x,this.position.y,2,h))}return t.prototype.addParticle=function(){var t,i=360*n.default.floatBetween(1-this.spread,1+this.spread),e=(this.angle+i)*(Math.PI/180),o=n.default.floatBetween(this.intensity/2,this.intensity);0===this.pool.length?t=new s.default(this.position.x,this.position.y,2,[140,85,35]):(t=this.pool.pop()).reset(this.position.x,this.position.y),t.life=n.default.between(40,100),t.setVelocity(Math.cos(e)*o,Math.sin(e)*o),t.setFriction(.05,.05),this.particles.push(t)},t.prototype.stop=function(){this.burn=!1},t.prototype.kill=function(){var t=this;this.active=!1,this.particles.forEach((function(i){i.active=!1,t.pool.push(i)})),this.particles.length=0},t.prototype.update=function(t,i){var e=this;if(this.active){this.burn&&this.addParticle();var o=[];this.particles.forEach((function(e,s){e.update(t,i),!1===e.active&&o.push(s)})),o.forEach((function(t){e.particles.splice(t,1).forEach((function(t){return e.pool.push(t)}))}))}},t.prototype.render=function(t){this.active&&this.particles.forEach((function(i){return i.render(t)}))},t}();i.Thruster=h},231:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.pick=i.floatBetween=i.between=void 0,i.between=function(t,e){return Math.floor((0,i.floatBetween)(t,e))},i.floatBetween=function(t,i){return Math.random()*(t-i)+i},i.pick=function(t){return t[(0,i.between)(0,t.length)]},i.default={between:i.between,floatBetween:i.floatBetween,pick:i.pick}},541:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(993),s=e(490),n=e(231),a=function(){function t(t,i,e,s){void 0===s&&(s=28),this.scene=t,this.active=!0,this.position=new o.default(i,e),this.size=s,this.angle=0,this.rotationSpeed=n.default.floatBetween(.1,2),this.velocity=new o.default(n.default.between(-200,200),n.default.between(-200,200)),this.points=function(t,i,e,s){void 0===e&&(e=20),void 0===s&&(s=8);var a=function(t,i,e,s){for(var n=6.28/t,a=0,h=[],r=0;r<t;r++){var c=new o.default(0+s*Math.cos(a),0+s*Math.sin(a));h.push(c),a+=n}return h}(s,0,0,e);return a.forEach((function(t){t.x+=n.default.between(-.25*e,.25*e),t.y+=n.default.between(-.25*e,.25*e)})),a}(0,0,this.size,12)}return Object.defineProperty(t.prototype,"radians",{get:function(){return this.angle*Math.PI/180},enumerable:!1,configurable:!0}),t.prototype.getBoundingBox=function(){var t=this.position.x+this.size/2,i=this.position.y+this.size/2;return{x:t,y:i,top:i-this.size,right:t+this.size,bottom:i+this.size,left:t-this.size}},t.prototype.update=function(t){var i=this.velocity.clone().multiply(t,t);this.position.add(i),this.position.x=s.default.wrap(this.position.x,-2*this.size,this.scene.width+2*this.size),this.position.y=s.default.wrap(this.position.y,-2*this.size,this.scene.height+2*this.size),this.angle+=this.rotationSpeed},t.prototype.render=function(t){t.save(),t.strokeStyle="#aaaaaa",t.fillStyle="#333333",t.translate(this.position.x+this.size/2,this.position.y+this.size/2),t.rotate(this.radians),t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y);for(var i=1;i<this.points.length;i++){var e=this.points[i];t.lineTo(e.x,e.y)}t.closePath(),t.stroke(),t.fill(),t.setTransform(1,0,0,1,0,0),t.restore()},t}();i.default=a},147:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(489),s=e(490),n=e(841),a=e(208),h=e(541),r=e(934),c=e(231),u=e(993),p=e(587),l=function(){function t(t,i,e){this.a=t,this.b=i,this.callback=e}return t.prototype.check=function(){var t=this;return this.a.forEach((function(i){i.active&&t.b.forEach((function(e){e.active&&function(t,i){var e=t.getBoundingBox(),o=i.getBoundingBox();return!(e.right<=o.left||e.bottom<=o.top||e.x>=o.right||e.y>=o.bottom)}(i,e)&&t.callback(i,e)}))})),[]},t}(),d=function(){function t(t){this.canvas=t,this.context=t.getContext("2d"),this.input=new o.default(this.canvas),this.displayList=[],this.ship=null,this.rocks=[],this.bullets=[],this.explosions=[],this.colliders=[]}return Object.defineProperty(t.prototype,"width",{get:function(){return this.canvas.width},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return this.canvas.height},enumerable:!1,configurable:!0}),t.prototype.addGameObject=function(t,i,e){if(void 0===i&&(i=void 0),void 0===e&&(e=void 0),i){var o=this.displayList.indexOf(i);this.displayList.splice(o-1,0,t)}else e?(o=this.displayList.indexOf(e),this.displayList.splice(o,0,t)):this.displayList.push(t)},t.prototype.addCollider=function(t,i,e){t=Array.isArray(t)?t:[t],i=Array.isArray(i)?i:[i];var o=new l(t,i,e);return this.colliders.push(o),o},t.prototype.destroyGameObject=function(t){var i=this.displayList.indexOf(t);t.pooled&&(t.active=!1),i>=0&&this.displayList.splice(i,1)},t.prototype.create=function(){this.ship=new n.default(this,this.width/2,this.height/2),this.addGameObject(new r.default(this));for(var t=0;t<10;t++){var i=new h.default(this,c.default.between(0,this.width),c.default.between(0,this.height));this.addGameObject(i),this.rocks.push(i)}this.addGameObject(this.ship),this.addCollider(this.ship,this.rocks,this.onShipCrash.bind(this)),this.addCollider(this.bullets,this.rocks,this.onBulletHitRock.bind(this))},t.prototype.destroy=function(){this.input.destroy()},t.prototype.update=function(t){var i=this,e=this.ship;if(this.input.changed){if(e.turn(this.input.turn),e.turnTo(null),1===this.input.accelerate)e.accelerate();else if(-1===this.input.accelerate)e.brake();else if(!0===this.input.shoot){if(e.fire()){var o=new u.default(600,0);o.rotate(e.radians);var n=new a.default(this,e.position.x,e.position.y,o);this.bullets.push(n),this.addGameObject(n,e)}this.input.shoot=!1}this.input.changed=!1}if(this.input.turnToMouse&&this.input.pointer.in){var h=s.default.Angle.between(e.position,this.input.pointer);e.turnTo(h)}var r=[];this.explosions.forEach((function(e,o){e.update(t,i.canvas),!1===e.active&&r.push(o)})),r.forEach((function(t){return i.explosions.splice(t,1)})),this.colliders.forEach((function(t){t.check()}))},t.prototype.render=function(t){var i=this,e=this.context;e.clearRect(0,0,this.canvas.width,this.canvas.height),this.explosions.forEach((function(t){return t.render(e)})),this.displayList.forEach((function(e){e.update(t),e.render(i.context)}));var o=this.ship;e.fillStyle="#ffffff",e.font="normal 12px monospace",["Mouse    ".concat(this.input.pointer.x.toFixed(2),", ").concat(this.input.pointer.y.toFixed(2)),"Speed    ".concat(o.speed.toFixed(2),", ").concat(o.velocity.x.toFixed(2),", ").concat(o.velocity.y.toFixed(2)),"Rotation ".concat(o.radians.toFixed(2),", ").concat(s.default.Angle.toRadians(o.rotateTo||0).toFixed(2),", ").concat(o.rotationSpeed.toFixed(2)),"Weapon   ".concat(o.weaponCooldown.toFixed(2)),"Controls ".concat(this.input.accelerate,", ").concat(this.input.turn,", ").concat(this.input.shoot),"Renderer ".concat(this.displayList.length)].forEach((function(t,i){e.fillText(t,12,14+12*i)}))},t.prototype.onShipCrash=function(t,i){return t=t,!0},t.prototype.onBulletHitRock=function(t,i){var e=this;this.destroyGameObject(t);var o=this.bullets.indexOf(t);this.bullets.splice(o,1);var s=i;this.destroyGameObject(i);var n=this.rocks.indexOf(s);if(this.rocks.splice(n,1),s.size>8){var a=Math.max(s.size/2,8);[new h.default(this,i.position.x,i.position.y,a),new h.default(this,i.position.x,i.position.y,a)].forEach((function(t){e.addGameObject(t),e.rocks.push(t)}))}var r=new p.Explosion(i.position.x,i.position.y,s.size/2);return this.explosions.push(r),!0},t}();i.default=d},841:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(993),s=e(490),n=e(587),a=function(){function t(t,i,e,s){void 0===s&&(s=20),this.scene=t,this.active=!0,this.position=new o.default(i,e),this.velocity=new o.default(0,0),this.size=s,this._angle=0,this.speed=25,this.thruster=new n.Thruster(this.position.x,this.position.y,3,180,.05,[200,200,200,1]),this.thruster.burn=!1,this.rotateTo=null,this.rotationSpeed=0,this.weaponCooldown=0}return Object.defineProperty(t.prototype,"angle",{get:function(){return this._angle},set:function(t){this._angle=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radians",{get:function(){return s.default.Angle.toRadians(this.angle)},enumerable:!1,configurable:!0}),t.prototype.turn=function(t){switch(t){case-1:this.rotationSpeed=-5;break;case 0:this.rotationSpeed=0;break;case 1:this.rotationSpeed=5}},t.prototype.turnTo=function(t){this.rotateTo=t},t.prototype.accelerate=function(){var t=Math.cos(this.radians)*this.speed;(t>0&&this.velocity.x<300||t<0&&this.velocity.x>-300)&&(this.velocity.x+=t);var i=Math.sin(this.radians)*this.speed;(i>0&&this.velocity.y<300||i<0&&this.velocity.y>-300)&&(this.velocity.y+=i)},t.prototype.brake=function(){this.velocity.x>.1?this.velocity.x-=Math.cos(this.radians)*this.speed:this.velocity.x<-.1&&(this.velocity.x+=Math.cos(this.radians)*this.speed),this.velocity.y>.1?this.velocity.y-=Math.sin(this.radians)*this.speed:this.velocity.y<-.1&&(this.velocity.y+=Math.sin(this.radians)*this.speed)},t.prototype.fire=function(){var t=0===this.weaponCooldown;return t&&(this.weaponCooldown=.125),t},t.prototype.getBoundingBox=function(){var t=this.position.x,i=this.position.y;return{x:t,y:i,top:i-this.size/2,right:t+this.size,bottom:i+this.size/2,left:t-this.size/2}},t.prototype.update=function(t){0!=this.rotationSpeed?this.angle+=this.rotationSpeed:null!=this.rotateTo&&(this.angle=s.default.Angle.toDegrees(s.default.Angle.rotateTo(this.radians,s.default.Angle.toRadians(this.rotateTo)))),this.weaponCooldown=s.default.dec(this.weaponCooldown,t,0);var i=this.velocity.clone().multiply(t,t);this.position.add(i),this.position.x=s.default.wrap(this.position.x,-2*this.size,this.scene.canvas.width+2*this.size),this.position.y=s.default.wrap(this.position.y,-2*this.size,this.scene.canvas.height+2*this.size),this.thruster.burn=0!==i.x&&0!==i.y,this.thruster.angle=180+this.angle,this.thruster.position.x=this.position.x,this.thruster.position.y=this.position.y,this.thruster.update(t,this.scene.canvas)},t.prototype.render=function(t){var i=[new o.default(this.size,0),new o.default(-this.size/2,this.size/2),new o.default(-this.size/2,-this.size/2)];this.thruster.render(t),t.save(),t.strokeStyle="#aaaaaa",t.fillStyle="#999999",t.translate(this.position.x,this.position.y),t.rotate(this.radians),t.beginPath(),t.moveTo(i[0].x,i[0].y),t.lineTo(i[1].x,i[1].y),t.lineTo(i[2].x,i[2].y),t.closePath(),t.stroke(),t.fill(),t.setTransform(1,0,0,1,0,0),t.restore()},t}();i.default=a},934:(t,i,e)=>{Object.defineProperty(i,"__esModule",{value:!0});var o=e(231),s=function(){function t(t){this.scene=t,this.stars=[];for(var i=0;i<300;i++){var e=o.default.between(1,2),s=o.default.floatBetween(.1,1),n=o.default.between(0,t.width),a=o.default.between(0,t.height),h=o.default.pick(["255, 255, 255","128, 0, 128","34, 34, 153"]);this.stars.push({x:n,y:a,size:e,color:h,alpha:s})}}return t.prototype.update=function(t){},t.prototype.render=function(){var t=this.scene.context;t.save(),this.stars.forEach((function(i){t.fillStyle="rgba(".concat(i.color,", ").concat(i.alpha,")"),t.fillRect(i.x,i.y,i.size,i.size)})),t.restore()},t}();i.default=s},993:(t,i)=>{Object.defineProperty(i,"__esModule",{value:!0});var e=function(){function t(t,i){void 0===t&&(t=0),void 0===i&&(i=0),this.x=t,this.y=i}return t.prototype.clone=function(){return new t(this.x,this.y)},t.prototype.set=function(t,i){this.x=t,this.y=i},t.prototype.add=function(t,i){return void 0===i&&(i=void 0),void 0===i&&(i=t.y,t=t.x),this.x+=t,this.y+=i,this},t.prototype.multiply=function(t,i){return void 0===i&&(i=void 0),void 0===i&&(i=t.y,t=t.x),this.x*=t,this.y*=i,this},t.prototype.rotate=function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(i*this.x-e*this.y,e*this.x+i*this.y)},t.prototype.setToPolar=function(t,i){return void 0===i&&(i=1),this.x=Math.cos(t)*i,this.y=Math.sin(t)*i,this},t}();i.default=e}},e={};t=function t(o){var s=e[o];if(void 0!==s)return s.exports;var n=e[o]={exports:{}};return i[o](n,n.exports,t),n.exports}(913),document.addEventListener("DOMContentLoaded",(function(){var i=document.getElementsByTagName("canvas")[0],e=new t.default(i);e.resize(),e.play(),window.addEventListener("resize",(function(){e.resize()}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQkwsSUFBakJNLEVBQ0gsT0FBT0EsRUFBYUMsUUFHckIsSUFBSUMsRUFBU0wsRUFBeUJFLEdBQVksQ0FHakRFLFFBQVMsSUFPVixPQUhBRSxFQUFvQkosR0FBVUcsRUFBUUEsRUFBT0QsUUFBU0gsR0FHL0NJLEVBQU9ELFFickJmLE1BRUFHLFNBQVNsSyxpQkFBaUIsb0JBQW9CLFdBQzVDLElBQU03RCxFQUFTK04sU0FBU0MscUJBQXFCLFVBQVUsR0FDakRDLEVBQVksSUFBSSxVQUFVak8sR0FDaENpTyxFQUFVMU4sU0FDVjBOLEVBQVVyTixPQUVWTSxPQUFPMkMsaUJBQWlCLFVBQVUsV0FDaENvSyxFQUFVMU4sZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vYXN0ZXJvaWRzLy4vc3JjL2FzdGVyb2lkcy50cyIsIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvYnVsbGV0LnRzIiwid2VicGFjazovL2FzdGVyb2lkcy8uL3NyYy9pbnB1dC50cyIsIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvbWF0aC50cyIsIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvcGFydGljbGUudHMiLCJ3ZWJwYWNrOi8vYXN0ZXJvaWRzLy4vc3JjL3BhcnRpY2xlZW1pdHRlci50cyIsIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvcm5kLnRzIiwid2VicGFjazovL2FzdGVyb2lkcy8uL3NyYy9yb2NrLnRzIiwid2VicGFjazovL2FzdGVyb2lkcy8uL3NyYy9zY2VuZS50cyIsIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvc2hpcC50cyIsIndlYnBhY2s6Ly9hc3Rlcm9pZHMvLi9zcmMvc3RhcmJhY2tncm91bmQudHMiLCJ3ZWJwYWNrOi8vYXN0ZXJvaWRzLy4vc3JjL3ZlY3RvcjJkLnRzIiwid2VicGFjazovL2FzdGVyb2lkcy93ZWJwYWNrL2Jvb3RzdHJhcCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXN0ZXJvaWRzIGZyb20gJy4vYXN0ZXJvaWRzJ1xyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG4gIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdjYW52YXMnKVswXSBhcyBIVE1MQ2FudmFzRWxlbWVudFxyXG4gIGNvbnN0IGFzdGVyb2lkcyA9IG5ldyBBc3Rlcm9pZHMoY2FudmFzKVxyXG4gIGFzdGVyb2lkcy5yZXNpemUoKVxyXG4gIGFzdGVyb2lkcy5wbGF5KClcclxuXHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsICgpID0+IHtcclxuICAgIGFzdGVyb2lkcy5yZXNpemUoKVxyXG4gIH0pXHJcbn0pIiwiaW1wb3J0IFNjZW5lIGZyb20gJy4vc2NlbmUnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFzdGVyb2lkc1xue1xuICBzY2VuZTogU2NlbmVcbiAgYW5pbWF0aW9uRnJhbWVJZDogbnVtYmVyXG4gIGxhc3RGcmFtZVRpbWU6IG51bWJlclxuXG4gIGNvbnN0cnVjdG9yKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQpXG4gIHtcbiAgICB0aGlzLnNjZW5lID0gbmV3IFNjZW5lKGNhbnZhcylcbiAgICB0aGlzLmFuaW1hdGlvbkZyYW1lSWQgPSAwXG4gICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gMFxuICAgIHRoaXMub25GcmFtZSA9IHRoaXMub25GcmFtZS5iaW5kKHRoaXMpXG4gIH1cblxuICByZXNpemUoKVxuICB7XG4gICAgLy8gdGhpcy5zY2VuZS5jYW52YXMud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aFxuICAgIC8vIHRoaXMuc2NlbmUuY2FudmFzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodFxuXG4gICAgY29uc3Qgc2l6ZSA9IHRoaXMuc2NlbmUuY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICAvLyBjb25zdCByYXRpbyA9IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHx8IDFcblxuICAgIHRoaXMuc2NlbmUuY2FudmFzLndpZHRoID0gc2l6ZS53aWR0aFxuICAgIHRoaXMuc2NlbmUuY2FudmFzLmhlaWdodCA9IHNpemUuaGVpZ2h0XG4gIH1cblxuICBwbGF5KClcbiAge1xuICAgIC8vIHRoaXMuYWN0aXZlID0gdHJ1ZVxuICAgIHRoaXMuc2NlbmUuY3JlYXRlKClcbiAgICB0aGlzLm9uRnJhbWUoMClcbiAgfVxuXG4gIG9uRnJhbWUodGltZTogbnVtYmVyKVxuICB7XG4gICAgY29uc3QgZGVsdGEgPSAodGltZSAtIHRoaXMubGFzdEZyYW1lVGltZSkgLyAxMDAwXG4gICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gdGltZVxuXG4gICAgdGhpcy5zY2VuZS51cGRhdGUoZGVsdGEpXG4gICAgdGhpcy5zY2VuZS5yZW5kZXIoZGVsdGEpXG5cbiAgICB0aGlzLmFuaW1hdGlvbkZyYW1lSWQgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMub25GcmFtZSlcbiAgfVxuXG4gIHN0b3AoKVxuICB7XG4gICAgd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0aW9uRnJhbWVJZClcbiAgfVxufSIsImltcG9ydCBTY2VuZSBmcm9tIFwiLi9zY2VuZVwiXHJcbmltcG9ydCB7IEdhbWVPYmplY3QsIEJveCB9IGZyb20gXCIuL2dhbWVvYmplY3RcIlxyXG5pbXBvcnQgVmVjdG9yMkQgZnJvbSBcIi4vdmVjdG9yMmRcIlxyXG5pbXBvcnQgTSBmcm9tICcuL21hdGgnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxsZXQgaW1wbGVtZW50cyBHYW1lT2JqZWN0XHJcbntcclxuICBzY2VuZTogU2NlbmVcclxuICBhY3RpdmU6IGJvb2xlYW5cclxuICBwb29sZWQ6IGJvb2xlYW5cclxuICBwb3NpdGlvbjogVmVjdG9yMkRcclxuICBzaXplOiBudW1iZXJcclxuICB2ZWxvY2l0eTogVmVjdG9yMkRcclxuXHJcbiAgY29uc3RydWN0b3Ioc2NlbmU6IFNjZW5lLCB4OiBudW1iZXIsIHk6IG51bWJlciwgdmVsb2NpdHk6IFZlY3RvcjJELCBzaXplOiBudW1iZXIgPSAyKVxyXG4gIHtcclxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxyXG4gICAgdGhpcy5hY3RpdmUgPSB0cnVlXHJcbiAgICB0aGlzLnBvb2xlZCA9IHRydWVcclxuICAgIHRoaXMucG9zaXRpb24gPSBuZXcgVmVjdG9yMkQoeCwgeSlcclxuICAgIHRoaXMuc2l6ZSA9IHNpemVcclxuICAgIHRoaXMudmVsb2NpdHkgPSB2ZWxvY2l0eVxyXG4gIH1cclxuXHJcbiAgZ2V0Qm91bmRpbmdCb3goKTogQm94XHJcbiAge1xyXG4gICAgY29uc3QgeCA9IHRoaXMucG9zaXRpb24ueFxyXG4gICAgY29uc3QgeSA9IHRoaXMucG9zaXRpb24ueVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgeCxcclxuICAgICAgeSxcclxuICAgICAgdG9wOiB5IC0gdGhpcy5zaXplIC8gMixcclxuICAgICAgcmlnaHQ6IHggKyB0aGlzLnNpemUgLyAyLFxyXG4gICAgICBib3R0b206IHkgKyB0aGlzLnNpemUgLyAyLFxyXG4gICAgICBsZWZ0OiB4IC0gdGhpcy5zaXplIC8gMixcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVwZGF0ZShkZWx0YTogbnVtYmVyKTogdm9pZFxyXG4gIHtcclxuICAgIGlmICh0aGlzLmFjdGl2ZSlcclxuICAgIHtcclxuICAgICAgY29uc3QgdmVsb2NpdHkgPSB0aGlzLnZlbG9jaXR5LmNsb25lKCkubXVsdGlwbHkoZGVsdGEsIGRlbHRhKVxyXG4gICAgICB0aGlzLnBvc2l0aW9uLmFkZCh2ZWxvY2l0eSlcclxuXHJcbiAgICAgIC8vIFRPRE8gZGVzdHJveSBpZiBvZmZzY3JlZW5cclxuICAgICAgLy8gdGhpcy5wb3NpdGlvbi54ID0gTS53cmFwKHRoaXMucG9zaXRpb24ueCwgLSh0aGlzLnNpemUgKiAyKSwgdGhpcy5zY2VuZS5jYW52YXMud2lkdGggKyAodGhpcy5zaXplICogMikpXHJcbiAgICAgIC8vIHRoaXMucG9zaXRpb24ueSA9IE0ud3JhcCh0aGlzLnBvc2l0aW9uLnksIC0odGhpcy5zaXplICogMiksIHRoaXMuc2NlbmUuY2FudmFzLmhlaWdodCArICh0aGlzLnNpemUgKiAyKSlcclxuICAgICAgY29uc3Qgc2l6ZTIgPSB0aGlzLnNpemUgKiAyXHJcbiAgICAgIGNvbnN0IG9mZnNjcmVlbiA9IHRoaXMucG9zaXRpb24ueCA8IC1zaXplMiB8fCB0aGlzLnBvc2l0aW9uLnggPiB0aGlzLnNjZW5lLndpZHRoICsgc2l6ZTIgfHwgdGhpcy5wb3NpdGlvbi55IDwgLXNpemUyIHx8IHRoaXMucG9zaXRpb24ueSA+IHRoaXMuc2NlbmUuaGVpZ2h0ICsgc2l6ZTJcclxuICAgICAgaWYgKG9mZnNjcmVlbilcclxuICAgICAge1xyXG4gICAgICAgIHRoaXMuc2NlbmUuZGVzdHJveUdhbWVPYmplY3QodGhpcylcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCk6IHZvaWRcclxuICB7XHJcbiAgICBpZiAodGhpcy5hY3RpdmUpXHJcbiAgICB7XHJcbiAgICAgIGNvbnRleHQuc2F2ZSgpXHJcblxyXG4gICAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmZmZmJ1xyXG5cclxuICAgICAgY29udGV4dC5iZWdpblBhdGgoKVxyXG4gICAgICBjb250ZXh0LmFyYyh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy5zaXplLCAwLCAzNjAsIGZhbHNlKVxyXG4gICAgICBjb250ZXh0LmZpbGwoKVxyXG4gICAgICBjb250ZXh0LmNsb3NlUGF0aCgpXHJcbiAgICAgIGNvbnRleHQucmVzdG9yZSgpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIlxyXG5leHBvcnQgaW50ZXJmYWNlIFBvaW50ZXIge1xyXG4gIHg6IG51bWJlcixcclxuICB5OiBudW1iZXIsXHJcbiAgaW46IGJvb2xlYW5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5wdXRcclxue1xyXG4gIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnRcclxuICBwb2ludGVyOiBQb2ludGVyXHJcbiAgdHVyblRvTW91c2U6IGJvb2xlYW5cclxuICB0dXJuOiBudW1iZXJcclxuICBhY2NlbGVyYXRlOiBudW1iZXJcclxuICBzaG9vdDogYm9vbGVhblxyXG4gIGNoYW5nZWQ6IGJvb2xlYW5cclxuXHJcbiAgY29uc3RydWN0b3IoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudClcclxuICB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhc1xyXG4gICAgdGhpcy5wb2ludGVyID0geyB4OiAwLCB5OiAwLCBpbjogZmFsc2UgfVxyXG4gICAgdGhpcy50dXJuVG9Nb3VzZSA9IGZhbHNlXHJcbiAgICB0aGlzLnR1cm4gPSAwXHJcbiAgICB0aGlzLmFjY2VsZXJhdGUgPSAwXHJcbiAgICB0aGlzLnNob290ID0gZmFsc2VcclxuICAgIHRoaXMuY2hhbmdlZCA9IGZhbHNlXHJcblxyXG4gICAgLy8gY2FudmFzIG11c3QgaGF2ZSBhIHRhYiBpbmRleCB0byBoYXZlIGtleWJvYXJkIGV2ZW50c1xyXG4gICAgY2FudmFzLnRhYkluZGV4ID0gMFxyXG4gICAgY2FudmFzLmZvY3VzKClcclxuXHJcbiAgICB0aGlzLm9uTW91c2VEb3duID0gdGhpcy5vbk1vdXNlRG93bi5iaW5kKHRoaXMpXHJcbiAgICB0aGlzLm9uTW91c2VFbnRlciA9IHRoaXMub25Nb3VzZUVudGVyLmJpbmQodGhpcylcclxuICAgIHRoaXMub25Nb3VzZUxlYXZlID0gdGhpcy5vbk1vdXNlTGVhdmUuYmluZCh0aGlzKVxyXG4gICAgdGhpcy5vbk1vdXNlTW92ZSA9IHRoaXMub25Nb3VzZU1vdmUuYmluZCh0aGlzKVxyXG4gICAgdGhpcy5vbktleURvd24gPSB0aGlzLm9uS2V5RG93bi5iaW5kKHRoaXMpXHJcbiAgICB0aGlzLm9uS2V5VXAgPSB0aGlzLm9uS2V5VXAuYmluZCh0aGlzKVxyXG5cclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLm9uTW91c2VEb3duKVxyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIHRoaXMub25Nb3VzZUVudGVyKVxyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIHRoaXMub25Nb3VzZUxlYXZlKVxyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5vbk1vdXNlTW92ZSlcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5vbktleURvd24pXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLm9uS2V5VXApXHJcbiAgfVxyXG5cclxuICBvbk1vdXNlRG93bihldmVudDogTW91c2VFdmVudCk6IHZvaWRcclxuICB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICB0aGlzLnR1cm5Ub01vdXNlID0gdHJ1ZVxyXG4gICAgdGhpcy5zaG9vdCA9IHRydWVcclxuICAgIHRoaXMuY2hhbmdlZCA9IHRydWVcclxuICB9XHJcblxyXG4gIG9uTW91c2VFbnRlcihldmVudDogTW91c2VFdmVudCk6IHZvaWRcclxuICB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICB0aGlzLnBvaW50ZXIuaW4gPSB0cnVlXHJcbiAgfVxyXG5cclxuICBvbk1vdXNlTGVhdmUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkXHJcbiAge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgdGhpcy5wb2ludGVyLmluID0gZmFsc2VcclxuICB9XHJcblxyXG4gIG9uTW91c2VNb3ZlKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZFxyXG4gIHtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuICAgIGNvbnN0IHJlY3QgPSB0aGlzLmNhbnZhcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxyXG4gICAgY29uc3Qgc2NhbGVYID0gdGhpcy5jYW52YXMud2lkdGggLyByZWN0LndpZHRoXHJcbiAgICBjb25zdCBzY2FsZVkgPSB0aGlzLmNhbnZhcy5oZWlnaHQgLyByZWN0LmhlaWdodFxyXG5cclxuICAgIHRoaXMucG9pbnRlci54ID0gKGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQpICogc2NhbGVYXHJcbiAgICB0aGlzLnBvaW50ZXIueSA9IChldmVudC5jbGllbnRZIC0gcmVjdC50b3ApICogc2NhbGVZXHJcbiAgfVxyXG5cclxuICBvbktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiB2b2lkXHJcbiAge1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ3cnIHx8IGV2ZW50LmtleSA9PT0gJ0Fycm93VXAnKVxyXG4gICAge1xyXG4gICAgICB0aGlzLmFjY2VsZXJhdGUgPSAxXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09ICdzJyB8fCBldmVudC5rZXkgPT09ICdBcnJvd0Rvd24nKVxyXG4gICAge1xyXG4gICAgICB0aGlzLmFjY2VsZXJhdGUgPSAtMVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnYScgfHwgZXZlbnQua2V5ID09PSAnQXJyb3dMZWZ0JylcclxuICAgIHtcclxuICAgICAgdGhpcy50dXJuID0gLTFcclxuICAgICAgdGhpcy50dXJuVG9Nb3VzZSA9IGZhbHNlXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09ICdkJyB8fCBldmVudC5rZXkgPT09ICdBcnJvd1JpZ2h0JylcclxuICAgIHtcclxuICAgICAgdGhpcy50dXJuID0gMVxyXG4gICAgICB0aGlzLnR1cm5Ub01vdXNlID0gZmFsc2VcclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gJyAnKVxyXG4gICAge1xyXG4gICAgICB0aGlzLnNob290ID0gdHJ1ZVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuY2hhbmdlZCA9IHRydWVcclxuICB9XHJcblxyXG4gIG9uS2V5VXAoZXZlbnQ6IEtleWJvYXJkRXZlbnQpXHJcbiAge1xyXG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ3cnIHx8IGV2ZW50LmtleSA9PT0gJ0Fycm93VXAnKVxyXG4gICAge1xyXG4gICAgICB0aGlzLmFjY2VsZXJhdGUgPSAwXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09ICdzJyB8fCBldmVudC5rZXkgPT09ICdBcnJvd0Rvd24nKVxyXG4gICAge1xyXG4gICAgICB0aGlzLmFjY2VsZXJhdGUgPSAwXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09ICdhJyB8fCBldmVudC5rZXkgPT09ICdBcnJvd0xlZnQnKVxyXG4gICAge1xyXG4gICAgICB0aGlzLnR1cm4gPSAwXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09ICdkJyB8fCBldmVudC5rZXkgPT09ICdBcnJvd1JpZ2h0JylcclxuICAgIHtcclxuICAgICAgdGhpcy50dXJuID0gMFxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoZXZlbnQua2V5ID09PSAnICcpXHJcbiAgICB7XHJcbiAgICAgIHRoaXMuc2hvb3QgPSBmYWxzZVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuY2hhbmdlZCA9IHRydWVcclxuICB9XHJcblxyXG4gIGRlc3Ryb3koKVxyXG4gIHtcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLm9uTW91c2VEb3duKVxyXG4gICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIHRoaXMub25Nb3VzZUVudGVyKVxyXG4gICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIHRoaXMub25Nb3VzZUxlYXZlKVxyXG4gICAgdGhpcy5jYW52YXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5vbk1vdXNlTW92ZSlcclxuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5vbktleURvd24pXHJcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLm9uS2V5VXApXHJcbiAgfVxyXG59IiwiaW1wb3J0IHsgVmVjdG9yTGlrZSB9IGZyb20gJy4vdHlwZXMnXHJcblxyXG5jb25zdCBQSTIgPSBNYXRoLlBJICogMlxyXG5cclxuZXhwb3J0IGNvbnN0IGluYzogRnVuY3Rpb24gPSAodmFsdWU6IG51bWJlciwgYW1vdW50OiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyID0+IHtcclxuICB2YWx1ZSArPSBhbW91bnRcclxuICB2YWx1ZSA9IE1hdGgubWluKHZhbHVlLCBtYXgpXHJcbiAgcmV0dXJuIHZhbHVlXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBkZWM6IEZ1bmN0aW9uID0gKHZhbHVlOiBudW1iZXIsIGFtb3VudDogbnVtYmVyLCBtaW46IG51bWJlcik6IG51bWJlciA9PiB7XHJcbiAgdmFsdWUgLT0gYW1vdW50XHJcbiAgdmFsdWUgPSBNYXRoLm1heCh2YWx1ZSwgbWluKVxyXG4gIHJldHVybiB2YWx1ZVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY2xhbXA6IEZ1bmN0aW9uID0gKHZhbHVlOiBudW1iZXIsIG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciA9PiB7XHJcbiAgaWYgKHZhbHVlIDwgbWluKVxyXG4gIHtcclxuICAgIHZhbHVlID0gbWluXHJcbiAgfVxyXG5cclxuICBpZiAodmFsdWUgPiBtYXgpXHJcbiAge1xyXG4gICAgdmFsdWUgPSBtYXhcclxuICB9XHJcblxyXG4gIHJldHVybiB2YWx1ZVxyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgd3JhcDogRnVuY3Rpb24gPSAodmFsdWU6IG51bWJlciwgbWluOiBudW1iZXIsIG1heDogbnVtYmVyKTogbnVtYmVyID0+IHtcclxuICBpZiAodmFsdWUgPCBtaW4pXHJcbiAge1xyXG4gICAgdmFsdWUgPSBtYXggKyAodmFsdWUgJSBtYXgpXHJcbiAgfVxyXG5cclxuICBpZiAodmFsdWUgPiBtYXgpXHJcbiAge1xyXG4gICAgdmFsdWUgPSBtaW4gKyAodmFsdWUgJSBtYXgpXHJcbiAgfVxyXG5cclxuICByZXR1cm4gdmFsdWVcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IEFuZ2xlID0ge1xyXG5cclxuICB0b0RlZ3JlZXMocmFkaWFuczogbnVtYmVyKTogbnVtYmVyXHJcbiAge1xyXG4gICAgcmV0dXJuIHJhZGlhbnMgKiAoMTgwIC8gTWF0aC5QSSlcclxuICB9LFxyXG5cclxuICB0b1JhZGlhbnMoZGVncmVlczogbnVtYmVyKTogbnVtYmVyXHJcbiAge1xyXG4gICAgcmV0dXJuIGRlZ3JlZXMgKiAgKE1hdGguUEkgLyAxODApXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICpcclxuICAgKiBAcGFyYW0gYVxyXG4gICAqIEBwYXJhbSBiXHJcbiAgICogQHJldHVybnMgYW5nbGUgaW4gZGVncmVlc1xyXG4gICAqL1xyXG4gIGJldHdlZW4oYTogVmVjdG9yTGlrZSwgYjogVmVjdG9yTGlrZSk6IG51bWJlclxyXG4gIHtcclxuICAgIHJldHVybiBNYXRoLmF0YW4yKGIueSAtIGEueSwgYi54IC0gYS54KSAqICgxODAgLyBNYXRoLlBJKVxyXG4gIH0sXHJcblxyXG4gIHJvdGF0ZVRvKGN1cnJlbnQ6IG51bWJlciwgdGFyZ2V0OiBudW1iZXIsIGxlcnA6IG51bWJlciA9IDAuMDUpOiBudW1iZXJcclxuICB7XHJcbiAgICBpZiAoY3VycmVudCAhPT0gdGFyZ2V0KVxyXG4gICAge1xyXG4gICAgICBpZiAoTWF0aC5hYnModGFyZ2V0IC0gY3VycmVudCkgPD0gbGVycCB8fCBNYXRoLmFicyh0YXJnZXQgLSBjdXJyZW50KSA+PSAoUEkyIC0gbGVycCkpXHJcbiAgICAgIHtcclxuICAgICAgICBjdXJyZW50ID0gdGFyZ2V0XHJcbiAgICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICB7XHJcbiAgICAgICAgaWYgKE1hdGguYWJzKHRhcmdldCAtIGN1cnJlbnQpID4gTWF0aC5QSSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICBpZiAodGFyZ2V0IDwgY3VycmVudClcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgdGFyZ2V0ICs9IFBJMlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZWxzZVxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB0YXJnZXQgLT0gUEkyXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGFyZ2V0ID4gY3VycmVudClcclxuICAgICAgICB7XHJcbiAgICAgICAgICBjdXJyZW50ICs9IGxlcnBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGFyZ2V0IDwgY3VycmVudClcclxuICAgICAgICB7XHJcbiAgICAgICAgICBjdXJyZW50IC09IGxlcnBcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gY3VycmVudFxyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIGluYyxcclxuICBkZWMsXHJcbiAgY2xhbXAsXHJcbiAgd3JhcCxcclxuICBBbmdsZVxyXG59IiwiaW1wb3J0IFZlY3RvcjJEIGZyb20gXCIuL3ZlY3RvcjJkXCJcclxuXHJcbmV4cG9ydCBjb25zdCBhcHBseUZyaWN0aW9uID0gKHZlbG9jaXR5OiBWZWN0b3IyRCwgZnJpY3Rpb246IFZlY3RvcjJEKSA9PiB7XHJcbiAgbGV0IG5lZ2F0aXZlXHJcbiAgbGV0IHZhbHVlXHJcbiAgaWYgKHZlbG9jaXR5LnggIT09IDAgJiYgZnJpY3Rpb24ueCAhPT0gMClcclxuICB7XHJcbiAgICBuZWdhdGl2ZSA9IHZlbG9jaXR5LnggPCAwXHJcblxyXG4gICAgdmFsdWUgPSBNYXRoLmFicyh2ZWxvY2l0eS54KSAqICgxIC0gZnJpY3Rpb24ueClcclxuICAgIGlmICh2YWx1ZSA8IDApXHJcbiAgICB7XHJcbiAgICAgIHZhbHVlID0gMFxyXG4gICAgfVxyXG5cclxuICAgIHZlbG9jaXR5LnggPSBuZWdhdGl2ZSA/IC12YWx1ZSA6IHZhbHVlXHJcbiAgfVxyXG5cclxuICBpZiAodmVsb2NpdHkueSAhPT0gMCAmJiBmcmljdGlvbi55ICE9PSAwKVxyXG4gIHtcclxuICAgIG5lZ2F0aXZlID0gdmVsb2NpdHkueSA8IDBcclxuXHJcbiAgICB2YWx1ZSA9IE1hdGguYWJzKHZlbG9jaXR5LnkpICogKDEgLSBmcmljdGlvbi55KVxyXG4gICAgaWYgKHZhbHVlIDwgMClcclxuICAgIHtcclxuICAgICAgdmFsdWUgPSAwXHJcbiAgICB9XHJcblxyXG4gICAgdmVsb2NpdHkueSA9IG5lZ2F0aXZlID8gLXZhbHVlIDogdmFsdWVcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhcnRpY2xlXHJcbntcclxuICBsaWZlOiBudW1iZXJcclxuICBwb3NpdGlvbjogVmVjdG9yMkRcclxuICB2ZWxvY2l0eTogVmVjdG9yMkRcclxuICBmcmljdGlvbjogVmVjdG9yMkRcclxuICBzaXplOiBudW1iZXJcclxuICBjb2xvcjogbnVtYmVyW11cclxuICBhY3RpdmU6IGJvb2xlYW5cclxuXHJcbiAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIsIHNpemU6IG51bWJlciwgY29sb3I6IG51bWJlcltdKVxyXG4gIHtcclxuICAgIHRoaXMubGlmZSA9IDEwMFxyXG4gICAgdGhpcy5wb3NpdGlvbiA9IG5ldyBWZWN0b3IyRCh4LCB5KVxyXG4gICAgdGhpcy52ZWxvY2l0eSA9IG5ldyBWZWN0b3IyRCgpXHJcbiAgICB0aGlzLmZyaWN0aW9uID0gbmV3IFZlY3RvcjJEKClcclxuICAgIHRoaXMuc2l6ZSA9IHNpemVcclxuICAgIHRoaXMuY29sb3IgPSBjb2xvclxyXG4gICAgdGhpcy5hY3RpdmUgPSB0cnVlXHJcbiAgfVxyXG5cclxuICBjbG9uZSgpXHJcbiAge1xyXG4gICAgY29uc3QgcCA9IG5ldyBQYXJ0aWNsZSh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy5zaXplLCB0aGlzLmNvbG9yKVxyXG4gICAgcC5saWZlID0gdGhpcy5saWZlXHJcbiAgICBwLnBvc2l0aW9uID0gdGhpcy5wb3NpdGlvbi5jbG9uZSgpXHJcbiAgICBwLnZlbG9jaXR5ID0gdGhpcy52ZWxvY2l0eS5jbG9uZSgpXHJcbiAgICBwLmZyaWN0aW9uID0gdGhpcy5mcmljdGlvbi5jbG9uZSgpXHJcbiAgICBwLnNpemUgPSB0aGlzLnNpemVcclxuICAgIHAuY29sb3IgPSB0aGlzLmNvbG9yXHJcbiAgICBwLmFjdGl2ZSA9IHRoaXMuYWN0aXZlXHJcbiAgICByZXR1cm4gcFxyXG4gIH1cclxuXHJcbiAgcmVzZXQoeD86IG51bWJlciwgeT86IG51bWJlcilcclxuICB7XHJcbiAgICB0aGlzLmFjdGl2ZSA9IHRydWVcclxuICAgIHRoaXMubGlmZSA9IDEwMFxyXG5cclxuICAgIGlmICh4ICYmIHkpXHJcbiAgICB7XHJcbiAgICAgIHRoaXMucG9zaXRpb24ueCA9IHhcclxuICAgICAgdGhpcy5wb3NpdGlvbi55ID0geVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0UG9zaXRpb24oeDogbnVtYmVyLCB5OiBudW1iZXIpXHJcbiAge1xyXG4gICAgdGhpcy5wb3NpdGlvbi54ID0geFxyXG4gICAgdGhpcy5wb3NpdGlvbi55ID0geVxyXG4gIH1cclxuXHJcbiAgc2V0VmVsb2NpdHkoeDogbnVtYmVyLCB5OiBudW1iZXIpXHJcbiAge1xyXG4gICAgdGhpcy52ZWxvY2l0eS54ID0geFxyXG4gICAgdGhpcy52ZWxvY2l0eS55ID0geVxyXG4gIH1cclxuXHJcbiAgc2V0RnJpY3Rpb24oeDogbnVtYmVyLCB5OiBudW1iZXIpXHJcbiAge1xyXG4gICAgdGhpcy5mcmljdGlvbi54ID0geFxyXG4gICAgdGhpcy5mcmljdGlvbi55ID0geVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhOiBudW1iZXIsIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQpXHJcbiAge1xyXG4gICAgdGhpcy5saWZlIC09IDFcclxuICAgIHRoaXMucG9zaXRpb24ueCArPSB0aGlzLnZlbG9jaXR5LnhcclxuICAgIHRoaXMucG9zaXRpb24ueSArPSB0aGlzLnZlbG9jaXR5LnlcclxuXHJcbiAgICBpZiAodGhpcy5saWZlIDwgMClcclxuICAgIHtcclxuICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZVxyXG4gICAgfVxyXG4gICAgaWYgKCh0aGlzLnBvc2l0aW9uLnggPiBjYW52YXMud2lkdGggfHwgdGhpcy5wb3NpdGlvbi54IDwgMCkgfHwgKHRoaXMucG9zaXRpb24ueSA+IGNhbnZhcy5oZWlnaHQgfHwgdGhpcy5wb3NpdGlvbi55IDwgMCkpXHJcbiAgICB7XHJcbiAgICAgIHRoaXMuYWN0aXZlID0gZmFsc2VcclxuICAgIH1cclxuXHJcbiAgICBhcHBseUZyaWN0aW9uKHRoaXMudmVsb2NpdHksIHRoaXMuZnJpY3Rpb24pXHJcbiAgfVxyXG5cclxuICByZW5kZXIoY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQpXHJcbiAge1xyXG4gICAgY29uc3QgYWxwaGEgPSB0aGlzLmxpZmUgLyAxMDBcclxuICAgIGN0eC5iZWdpblBhdGgoKVxyXG4gICAgY3R4LmFyYyh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgdGhpcy5zaXplLCAwLCBNYXRoLlBJICogMiwgZmFsc2UpXHJcbiAgICBjdHguZmlsbFN0eWxlID0gYHJnYigke3RoaXMuY29sb3JbMF19LCAke3RoaXMuY29sb3JbMV19LCAke3RoaXMuY29sb3JbMl19LCAke2FscGhhfSlgXHJcbiAgICBjdHguZmlsbCgpXHJcbiAgfVxyXG59IiwiaW1wb3J0IFZlY3RvcjJEIGZyb20gXCIuL3ZlY3RvcjJkXCJcclxuaW1wb3J0IFBhcnRpY2xlIGZyb20gXCIuL3BhcnRpY2xlXCJcclxuaW1wb3J0IHJuZCBmcm9tIFwiLi9ybmRcIlxyXG5pbXBvcnQgeyBDb2xvciB9IGZyb20gXCIuL3R5cGVzXCJcclxuXHJcblxyXG4vLyBUT0RPIC0gYW4gZXhwbG9zaW9uIGlzIGp1c3QgYSB0aHJ1c3RlciB3aGljaCBoYXMgYSBsaW1pdGVkIFwiYnVyblwiIGFuZCBsYXJnZXIgYW5nbGUgKG9yIHZpc2EtdmVyc2EpXHJcblxyXG5leHBvcnQgY2xhc3MgRXhwbG9zaW9uXHJcbntcclxuICBhY3RpdmU6IGJvb2xlYW5cclxuICBwb3NpdGlvbjogVmVjdG9yMkRcclxuICBwYXJ0aWNsZXM6IFBhcnRpY2xlW11cclxuXHJcbiAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIsIGludGVuc2l0eTogbnVtYmVyID0gNClcclxuICB7XHJcbiAgICB0aGlzLmFjdGl2ZSA9IHRydWVcclxuICAgIHRoaXMucG9zaXRpb24gPSBuZXcgVmVjdG9yMkQoeCwgeSlcclxuICAgIHRoaXMucGFydGljbGVzID0gW11cclxuXHJcbiAgICBjb25zdCBwYXJ0aWNsZUNvdW50ID0gaW50ZW5zaXR5ICogMTBcclxuICAgIGNvbnN0IGFuZ2xlU3RlcCA9IDM2MCAvIHBhcnRpY2xlQ291bnRcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFydGljbGVDb3VudDsgaSsrKVxyXG4gICAge1xyXG4gICAgICBjb25zdCByYWQgPSAoYW5nbGVTdGVwICogaSkgKiAoTWF0aC5QSSAvIDE4MClcclxuICAgICAgY29uc3QgZGlzdGFuY2UgPSAwXHJcbiAgICAgIGNvbnN0IHggPSB0aGlzLnBvc2l0aW9uLnggKyBNYXRoLmNvcyhyYWQpICogZGlzdGFuY2VcclxuICAgICAgY29uc3QgeSA9IHRoaXMucG9zaXRpb24ueSArIE1hdGguc2luKHJhZCkgKiBkaXN0YW5jZVxyXG4gICAgICBjb25zdCBzaXplID0gMlxyXG4gICAgICBjb25zdCBjb2xvciA9IFsxNDAsIDg1LCAzNV1cclxuICAgICAgY29uc3Qgc3BlZWQgPSBybmQuZmxvYXRCZXR3ZWVuKDIsIDYpXHJcblxyXG4gICAgICBjb25zdCBwID0gbmV3IFBhcnRpY2xlKHgsIHksIHNpemUsIGNvbG9yKVxyXG4gICAgICBwLnNldFZlbG9jaXR5KE1hdGguY29zKHJhZCkgKiBzcGVlZCwgTWF0aC5zaW4ocmFkKSAqIHNwZWVkKVxyXG4gICAgICBwLnNldEZyaWN0aW9uKDAuMDUsIDAuMDUpXHJcbiAgICAgIHRoaXMucGFydGljbGVzLnB1c2gocClcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVwZGF0ZShkZWx0YTogbnVtYmVyLCBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KVxyXG4gIHtcclxuICAgIGlmICh0aGlzLmFjdGl2ZSlcclxuICAgIHtcclxuICAgICAgdGhpcy5wYXJ0aWNsZXMuZm9yRWFjaChwID0+IHtcclxuICAgICAgICBwLnVwZGF0ZShkZWx0YSwgY2FudmFzKVxyXG4gICAgICAgIHRoaXMuYWN0aXZlID0gQm9vbGVhbih0aGlzLmFjdGl2ZSAmJiBwLmFjdGl2ZSlcclxuICAgICAgfSlcclxuXHJcbiAgICAgIGlmICghdGhpcy5hY3RpdmUpXHJcbiAgICAgIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImRlYWRcIilcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKVxyXG4gIHtcclxuICAgIGlmICh0aGlzLmFjdGl2ZSlcclxuICAgIHtcclxuICAgICAgdGhpcy5wYXJ0aWNsZXMuZm9yRWFjaChwID0+IHAucmVuZGVyKGN0eCkpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVGhydXN0ZXJcclxue1xyXG4gIGFjdGl2ZTogYm9vbGVhblxyXG4gIGJ1cm46IGJvb2xlYW5cclxuICBpbnRlbnNpdHk6IG51bWJlclxyXG4gIGFuZ2xlOiBudW1iZXJcclxuICBzcHJlYWQ6IG51bWJlclxyXG4gIHBvc2l0aW9uOiBWZWN0b3IyRFxyXG4gIGNvbG9yOiBDb2xvclxyXG4gIHBvb2w6IFBhcnRpY2xlW11cclxuICBwYXJ0aWNsZXM6IFBhcnRpY2xlW11cclxuXHJcbiAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIsIGludGVuc2l0eTogbnVtYmVyID0gNCwgYW5nbGU6IG51bWJlciA9IDAsIHNwcmVhZDogbnVtYmVyID0gMC4xLCBjb2xvcjogQ29sb3IgPSBbMTQwLCA4NSwgMzUsIDFdKVxyXG4gIHtcclxuICAgIHRoaXMuYWN0aXZlID0gdHJ1ZVxyXG4gICAgdGhpcy5idXJuID0gdHJ1ZVxyXG4gICAgdGhpcy5pbnRlbnNpdHkgPSBpbnRlbnNpdHlcclxuICAgIHRoaXMuYW5nbGUgPSBhbmdsZSA9PT0gMCA/IDM2MCA6IGFuZ2xlXHJcbiAgICB0aGlzLnNwcmVhZCA9IHNwcmVhZFxyXG4gICAgdGhpcy5wb3NpdGlvbiA9IG5ldyBWZWN0b3IyRCh4LCB5KVxyXG4gICAgdGhpcy5wb29sID0gW11cclxuICAgIHRoaXMucGFydGljbGVzID0gW11cclxuICAgIHRoaXMuY29sb3IgPSBjb2xvclxyXG4gICAgY29uc3Qgc2l6ZSA9IDJcclxuICAgIGNvbnN0IHBhcnRpY2xlQ291bnQgPSA1MFxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0aWNsZUNvdW50OyBpKyspXHJcbiAgICB7XHJcbiAgICAgIHRoaXMucG9vbC5wdXNoKG5ldyBQYXJ0aWNsZSh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgc2l6ZSwgY29sb3IpKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYWRkUGFydGljbGUoKVxyXG4gIHtcclxuICAgIGNvbnN0IGRpdGhlciA9IDM2MCAqIChybmQuZmxvYXRCZXR3ZWVuKCgxIC0gdGhpcy5zcHJlYWQpLCAoMSArIHRoaXMuc3ByZWFkKSkpXHJcbiAgICBjb25zdCByYWQgPSAodGhpcy5hbmdsZSArIGRpdGhlcikgKiAoTWF0aC5QSSAvIDE4MClcclxuICAgIGNvbnN0IHNwZWVkID0gcm5kLmZsb2F0QmV0d2Vlbih0aGlzLmludGVuc2l0eSAvIDIsIHRoaXMuaW50ZW5zaXR5KVxyXG5cclxuICAgIGxldCBwXHJcbiAgICBpZiAodGhpcy5wb29sLmxlbmd0aCA9PT0gMClcclxuICAgIHtcclxuICAgICAgcCA9IG5ldyBQYXJ0aWNsZSh0aGlzLnBvc2l0aW9uLngsIHRoaXMucG9zaXRpb24ueSwgMiwgWzE0MCwgODUsIDM1XSlcclxuICAgIH1cclxuICAgIGVsc2VcclxuICAgIHtcclxuICAgICAgcCA9IHRoaXMucG9vbC5wb3AoKSBhcyBQYXJ0aWNsZVxyXG4gICAgICBwLnJlc2V0KHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55KVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHAuYW5nbGUgPSByYWRcclxuICAgIC8vIHAuc3BlZWQgPSBzcGVlZFxyXG4gICAgcC5saWZlID0gcm5kLmJldHdlZW4oNDAsIDEwMClcclxuICAgIHAuc2V0VmVsb2NpdHkoTWF0aC5jb3MocmFkKSAqIHNwZWVkLCBNYXRoLnNpbihyYWQpICogc3BlZWQpXHJcbiAgICBwLnNldEZyaWN0aW9uKDAuMDUsIDAuMDUpXHJcbiAgICB0aGlzLnBhcnRpY2xlcy5wdXNoKHApXHJcbiAgfVxyXG5cclxuICBzdG9wKClcclxuICB7XHJcbiAgICB0aGlzLmJ1cm4gPSBmYWxzZVxyXG4gIH1cclxuXHJcbiAga2lsbCgpXHJcbiAge1xyXG4gICAgdGhpcy5hY3RpdmUgPSBmYWxzZVxyXG4gICAgdGhpcy5wYXJ0aWNsZXMuZm9yRWFjaChwID0+IHtcclxuICAgICAgcC5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICB0aGlzLnBvb2wucHVzaChwKVxyXG4gICAgfSlcclxuICAgIHRoaXMucGFydGljbGVzLmxlbmd0aCA9IDBcclxuICB9XHJcblxyXG4gIHVwZGF0ZShkZWx0YTogbnVtYmVyLCBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KVxyXG4gIHtcclxuICAgIGlmICh0aGlzLmFjdGl2ZSlcclxuICAgIHtcclxuICAgICAgaWYgKHRoaXMuYnVybilcclxuICAgICAge1xyXG4gICAgICAgIHRoaXMuYWRkUGFydGljbGUoKVxyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBkZWFkOiBudW1iZXJbXSA9IFtdXHJcbiAgICAgIHRoaXMucGFydGljbGVzLmZvckVhY2goKHAsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgcC51cGRhdGUoZGVsdGEsIGNhbnZhcylcclxuXHJcbiAgICAgICAgaWYgKGZhbHNlID09PSBwLmFjdGl2ZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICBkZWFkLnB1c2goaW5kZXgpXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG5cclxuICAgICAgZGVhZC5mb3JFYWNoKGluZGV4ID0+IHtcclxuICAgICAgICBjb25zdCByZW1vdmVkID0gdGhpcy5wYXJ0aWNsZXMuc3BsaWNlKGluZGV4LCAxKVxyXG4gICAgICAgIHJlbW92ZWQuZm9yRWFjaChwID0+IHRoaXMucG9vbC5wdXNoKHApKVxyXG4gICAgICB9KVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKGN0eDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKVxyXG4gIHtcclxuICAgIGlmICh0aGlzLmFjdGl2ZSlcclxuICAgIHtcclxuICAgICAgdGhpcy5wYXJ0aWNsZXMuZm9yRWFjaChwID0+IHAucmVuZGVyKGN0eCkpXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCBiZXR3ZWVuID0gKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciA9PiB7XHJcbiAgcmV0dXJuIE1hdGguZmxvb3IoZmxvYXRCZXR3ZWVuKG1pbiwgbWF4KSlcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGZsb2F0QmV0d2VlbiA9IChtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXIgPT4ge1xyXG4gIHJldHVybiAoTWF0aC5yYW5kb20oKSAqIChtaW4gLSBtYXgpKSArIG1heFxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgcGljayA9IChjaG9pY2VzOiBBcnJheTxhbnk+KTogYW55ID0+IHtcclxuICBjb25zdCBpbmRleCA9IGJldHdlZW4oMCwgY2hvaWNlcy5sZW5ndGgpXHJcbiAgcmV0dXJuIGNob2ljZXNbaW5kZXhdXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBiZXR3ZWVuLFxyXG4gIGZsb2F0QmV0d2VlbixcclxuICBwaWNrXHJcbn0iLCJpbXBvcnQgU2NlbmUgZnJvbSAnLi9zY2VuZSdcclxuaW1wb3J0IHsgR2FtZU9iamVjdCwgQm94IH0gZnJvbSAnLi9nYW1lb2JqZWN0J1xyXG5pbXBvcnQgVmVjdG9yMkQgZnJvbSAnLi92ZWN0b3IyZCdcclxuaW1wb3J0IE0gZnJvbSAnLi9tYXRoJ1xyXG5pbXBvcnQgcm5kIGZyb20gJy4vcm5kJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm9jayBpbXBsZW1lbnRzIEdhbWVPYmplY3Rcclxue1xyXG4gIHNjZW5lOiBTY2VuZVxyXG4gIGFjdGl2ZTogYm9vbGVhblxyXG4gIHNpemU6IG51bWJlclxyXG4gIHBvc2l0aW9uOiBWZWN0b3IyRFxyXG4gIGFuZ2xlOiBudW1iZXJcclxuICByb3RhdGlvblNwZWVkOiBudW1iZXJcclxuICB2ZWxvY2l0eTogVmVjdG9yMkRcclxuICBwb2ludHM6IEFycmF5PFZlY3RvcjJEPlxyXG5cclxuICBjb25zdHJ1Y3RvcihzY2VuZTogU2NlbmUsIHg6IG51bWJlciwgeTogbnVtYmVyLCBzaXplID0gMjgpXHJcbiAge1xyXG4gICAgY29uc3QgcG9pbnRzT25DaXJjbGUgPSAoY291bnQ6IG51bWJlciwgeDogbnVtYmVyLCB5OiBudW1iZXIsIHJhZGl1czogbnVtYmVyKTogQXJyYXk8VmVjdG9yMkQ+ID0+IHtcclxuICAgICAgY29uc3Qgc3RhcnRBbmdsZTogbnVtYmVyID0gMDtcclxuICAgICAgY29uc3QgZW5kQW5nbGU6IG51bWJlciA9IDYuMjg7XHJcblxyXG4gICAgICBjb25zdCBhbmdsZVN0ZXA6IG51bWJlciA9IChlbmRBbmdsZSAtIHN0YXJ0QW5nbGUpIC8gY291bnQ7XHJcbiAgICAgIGxldCBhbmdsZTogbnVtYmVyID0gc3RhcnRBbmdsZTtcclxuXHJcbiAgICAgIGNvbnN0IHBvaW50czogQXJyYXk8VmVjdG9yMkQ+ID0gW11cclxuICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IGNvdW50OyBpKyspXHJcbiAgICAgIHtcclxuICAgICAgICBjb25zdCBwb2ludCA9IG5ldyBWZWN0b3IyRChcclxuICAgICAgICAgIHggKyAocmFkaXVzICogTWF0aC5jb3MoYW5nbGUpKSxcclxuICAgICAgICAgIHkgKyAocmFkaXVzICogTWF0aC5zaW4oYW5nbGUpKVxyXG4gICAgICAgIClcclxuXHJcbiAgICAgICAgcG9pbnRzLnB1c2gocG9pbnQpXHJcbiAgICAgICAgYW5nbGUgKz0gYW5nbGVTdGVwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICByZXR1cm4gcG9pbnRzO1xyXG4gICAgfTtcclxuXHJcbiAgICBjb25zdCBjcmVhdGVQb2x5Z29uUG9pbnRzID0gKHg6IG51bWJlciwgeTogbnVtYmVyLCByOiBudW1iZXIgPSAyMCwgdG90YWxQb2ludHM6IG51bWJlciA9IDgpOiBBcnJheTxWZWN0b3IyRD4gPT4ge1xyXG4gICAgICBjb25zdCBwb2ludHM6IEFycmF5PFZlY3RvcjJEPiA9IHBvaW50c09uQ2lyY2xlKHRvdGFsUG9pbnRzLCB4LCB5LCByKVxyXG5cclxuICAgICAgcG9pbnRzLmZvckVhY2gocG9pbnQgPT4ge1xyXG4gICAgICAgIHBvaW50LnggKz0gcm5kLmJldHdlZW4oLShyICogMC4yNSksIHIgKiAwLjI1KVxyXG4gICAgICAgIHBvaW50LnkgKz0gcm5kLmJldHdlZW4oLShyICogMC4yNSksIHIgKiAwLjI1KVxyXG4gICAgICB9KVxyXG5cclxuICAgICAgcmV0dXJuIHBvaW50c1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxyXG4gICAgdGhpcy5hY3RpdmUgPSB0cnVlXHJcbiAgICB0aGlzLnBvc2l0aW9uID0gbmV3IFZlY3RvcjJEKHgsIHkpXHJcbiAgICB0aGlzLnNpemUgPSBzaXplXHJcbiAgICB0aGlzLmFuZ2xlID0gMFxyXG4gICAgdGhpcy5yb3RhdGlvblNwZWVkID0gcm5kLmZsb2F0QmV0d2VlbigwLjEsIDIpXHJcbiAgICB0aGlzLnZlbG9jaXR5ID0gbmV3IFZlY3RvcjJEKHJuZC5iZXR3ZWVuKC0yMDAsIDIwMCksIHJuZC5iZXR3ZWVuKC0yMDAsIDIwMCkpXHJcbiAgICB0aGlzLnBvaW50cyA9IGNyZWF0ZVBvbHlnb25Qb2ludHMoMCwgMCwgdGhpcy5zaXplLCAxMilcclxuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucG9zaXRpb24sIHRoaXMudmVsb2NpdHkpXHJcbiAgfVxyXG5cclxuICBnZXQgcmFkaWFucygpOiBudW1iZXJcclxuICB7XHJcbiAgICByZXR1cm4gdGhpcy5hbmdsZSAqIE1hdGguUEkgLyAxODBcclxuICB9XHJcblxyXG4gIGdldEJvdW5kaW5nQm94KCk6IEJveFxyXG4gIHtcclxuICAgIGNvbnN0IHggPSB0aGlzLnBvc2l0aW9uLnggKyB0aGlzLnNpemUgLyAyXHJcbiAgICBjb25zdCB5ID0gdGhpcy5wb3NpdGlvbi55ICsgdGhpcy5zaXplIC8gMlxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgeCxcclxuICAgICAgeSxcclxuICAgICAgdG9wOiB5IC0gdGhpcy5zaXplLFxyXG4gICAgICByaWdodDogeCArIHRoaXMuc2l6ZSxcclxuICAgICAgYm90dG9tOiB5ICsgdGhpcy5zaXplLFxyXG4gICAgICBsZWZ0OiB4IC0gdGhpcy5zaXplLFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhOiBudW1iZXIpXHJcbiAge1xyXG4gICAgY29uc3QgbW92ZW1lbnQ6IFZlY3RvcjJEID0gdGhpcy52ZWxvY2l0eS5jbG9uZSgpLm11bHRpcGx5KGRlbHRhLCBkZWx0YSlcclxuICAgIHRoaXMucG9zaXRpb24uYWRkKG1vdmVtZW50KVxyXG5cclxuICAgIHRoaXMucG9zaXRpb24ueCA9IE0ud3JhcCh0aGlzLnBvc2l0aW9uLngsIC0odGhpcy5zaXplICogMiksIHRoaXMuc2NlbmUud2lkdGggKyAodGhpcy5zaXplICogMikpXHJcbiAgICB0aGlzLnBvc2l0aW9uLnkgPSBNLndyYXAodGhpcy5wb3NpdGlvbi55LCAtKHRoaXMuc2l6ZSAqIDIpLCB0aGlzLnNjZW5lLmhlaWdodCArICh0aGlzLnNpemUgKiAyKSlcclxuXHJcbiAgICB0aGlzLmFuZ2xlICs9IHRoaXMucm90YXRpb25TcGVlZFxyXG5cclxuICAgIC8vIGNvbnNvbGUubG9nKGAke3RoaXMucG9zaXRpb24ueH0sICR7dGhpcy5wb3NpdGlvbi55fSAke3RoaXMuYW5nbGV9YClcclxuICB9XHJcblxyXG4gIHJlbmRlcihjb250ZXh0OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQpXHJcbiAge1xyXG4gICAgY29udGV4dC5zYXZlKClcclxuICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSAnI2FhYWFhYSdcclxuICAgIGNvbnRleHQuZmlsbFN0eWxlID0gJyMzMzMzMzMnXHJcblxyXG4gICAgY29udGV4dC50cmFuc2xhdGUodGhpcy5wb3NpdGlvbi54ICsgdGhpcy5zaXplIC8gMiwgdGhpcy5wb3NpdGlvbi55ICsgdGhpcy5zaXplIC8gMilcclxuICAgIGNvbnRleHQucm90YXRlKHRoaXMucmFkaWFucylcclxuXHJcbiAgICBjb250ZXh0LmJlZ2luUGF0aCgpXHJcbiAgICBjb250ZXh0Lm1vdmVUbyh0aGlzLnBvaW50c1swXS54LCB0aGlzLnBvaW50c1swXS55KVxyXG5cclxuICAgIGZvciAobGV0IGluZGV4OiBudW1iZXIgPSAxOyBpbmRleCA8IHRoaXMucG9pbnRzLmxlbmd0aDsgaW5kZXgrKylcclxuICAgIHtcclxuICAgICAgY29uc3QgcG9pbnQgPSB0aGlzLnBvaW50c1tpbmRleF1cclxuICAgICAgY29udGV4dC5saW5lVG8ocG9pbnQueCwgcG9pbnQueSlcclxuICAgIH1cclxuICAgIGNvbnRleHQuY2xvc2VQYXRoKClcclxuICAgIGNvbnRleHQuc3Ryb2tlKClcclxuICAgIGNvbnRleHQuZmlsbCgpXHJcblxyXG4gICAgLy8gY2VudGVyIHBvaW50XHJcbiAgICAvLyBjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmZmZmJ1xyXG4gICAgLy8gY29udGV4dC5maWxsUmVjdCgtMSwgLTEsIDIsIDIpXHJcblxyXG4gICAgY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMClcclxuXHJcbiAgICBjb250ZXh0LnJlc3RvcmUoKVxyXG4gIH1cclxufSIsImltcG9ydCBJbnB1dCBmcm9tICcuL2lucHV0J1xyXG5pbXBvcnQgTSBmcm9tICcuL21hdGgnXHJcbmltcG9ydCBTaGlwIGZyb20gJy4vc2hpcCdcclxuaW1wb3J0IEJ1bGxldCBmcm9tICcuL2J1bGxldCdcclxuaW1wb3J0IFBhcnRpY2xlIGZyb20gJy4vcGFydGljbGUnXHJcbmltcG9ydCBSb2NrIGZyb20gJy4vcm9jaydcclxuaW1wb3J0IFN0YXJCYWNrZ3JvdW5kIGZyb20gJy4vc3RhcmJhY2tncm91bmQnXHJcbmltcG9ydCBSTkQgZnJvbSAnLi9ybmQnXHJcbmltcG9ydCBWZWN0b3IyRCBmcm9tICcuL3ZlY3RvcjJkJ1xyXG5pbXBvcnQgeyBHYW1lT2JqZWN0LCBCb3ggfSBmcm9tICcuL2dhbWVvYmplY3QnXHJcbmltcG9ydCB7IEV4cGxvc2lvbiwgVGhydXN0ZXIgfSBmcm9tICcuL3BhcnRpY2xlZW1pdHRlcidcclxuXHJcbmNvbnN0IE1BWF9ST0NLX0NPVU5UOiBudW1iZXIgPSAxMFxyXG5cclxuY2xhc3MgT2JqZWN0UG9vbDxUPlxyXG57XHJcbiAgaXRlbXM6IEFycmF5PFQ+XHJcblxyXG4gIGNvbnN0cnVjdG9yKClcclxuICB7XHJcbiAgICB0aGlzLml0ZW1zID0gW11cclxuICB9XHJcbn1cclxuXHJcbnR5cGUgQ29sbGlzaW9uQ2FsbGJhY2tGbiA9IChhOiBHYW1lT2JqZWN0LCBiOiBHYW1lT2JqZWN0KSA9PiBib29sZWFuXHJcblxyXG5cclxuY2xhc3MgQ29sbGlkZXJcclxue1xyXG4gIHJlYWRvbmx5IGE6IEdhbWVPYmplY3RbXVxyXG4gIHJlYWRvbmx5IGI6IEdhbWVPYmplY3RbXVxyXG4gIHJlYWRvbmx5IGNhbGxiYWNrOiBDb2xsaXNpb25DYWxsYmFja0ZuXHJcblxyXG4gIGNvbnN0cnVjdG9yKGE6IEdhbWVPYmplY3RbXSwgYjogR2FtZU9iamVjdFtdLCBjYWxsYmFjazogQ29sbGlzaW9uQ2FsbGJhY2tGbilcclxuICB7XHJcbiAgICB0aGlzLmEgPSBhXHJcbiAgICB0aGlzLmIgPSBiXHJcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2tcclxuICB9XHJcblxyXG4gIGNoZWNrKCk6IEdhbWVPYmplY3RbXVxyXG4gIHtcclxuICAgIGNvbnN0IG92ZXJsYXBzID0gKGE6IEdhbWVPYmplY3QsIGI6IEdhbWVPYmplY3QpID0+IHtcclxuICAgICAgY29uc3QgYUJveDogQm94ICA9IGEuZ2V0Qm91bmRpbmdCb3goKVxyXG4gICAgICBjb25zdCBiQm94OiBCb3ggPSBiLmdldEJvdW5kaW5nQm94KClcclxuXHJcbiAgICAgIGNvbnN0IG92ZXJsYXAgPSAhKFxyXG4gICAgICAgIGFCb3gucmlnaHQgPD0gYkJveC5sZWZ0IHx8XHJcbiAgICAgICAgYUJveC5ib3R0b20gPD0gYkJveC50b3AgfHxcclxuICAgICAgICBhQm94LnggPj0gYkJveC5yaWdodCB8fFxyXG4gICAgICAgIGFCb3gueSA+PSBiQm94LmJvdHRvbVxyXG4gICAgICApXHJcblxyXG4gICAgICByZXR1cm4gb3ZlcmxhcFxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYS5mb3JFYWNoKGEgPT4ge1xyXG4gICAgICBpZiAoYS5hY3RpdmUpXHJcbiAgICAgIHtcclxuICAgICAgICB0aGlzLmIuZm9yRWFjaChiID0+IHtcclxuICAgICAgICAgIGlmIChiLmFjdGl2ZSlcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgaWYgKG92ZXJsYXBzKGEsIGIpKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgdGhpcy5jYWxsYmFjayhhLCBiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICByZXR1cm4gW11cclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjZW5lXHJcbntcclxuICBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50XHJcbiAgY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEIHwgbnVsbFxyXG4gIGlucHV0OiBJbnB1dFxyXG4gIGRpc3BsYXlMaXN0OiBBcnJheTxhbnk+XHJcblxyXG4gIHNoaXA6IFNoaXAgfCBudWxsXHJcbiAgcm9ja3M6IEFycmF5PFJvY2s+XHJcbiAgYnVsbGV0czogQXJyYXk8QnVsbGV0PlxyXG4gIGV4cGxvc2lvbnM6IEFycmF5PEV4cGxvc2lvbj5cclxuICBjb2xsaWRlcnM6IENvbGxpZGVyW11cclxuXHJcbiAgY29uc3RydWN0b3IoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudClcclxuICB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhc1xyXG4gICAgdGhpcy5jb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJylcclxuICAgIHRoaXMuaW5wdXQgPSBuZXcgSW5wdXQodGhpcy5jYW52YXMpXHJcbiAgICB0aGlzLmRpc3BsYXlMaXN0ID0gW11cclxuXHJcbiAgICB0aGlzLnNoaXAgPSBudWxsXHJcbiAgICB0aGlzLnJvY2tzID0gW11cclxuICAgIHRoaXMuYnVsbGV0cyA9IFtdXHJcbiAgICB0aGlzLmV4cGxvc2lvbnMgPSBbXVxyXG4gICAgdGhpcy5jb2xsaWRlcnMgPSBbXVxyXG4gIH1cclxuXHJcbiAgZ2V0IHdpZHRoKCk6IG51bWJlclxyXG4gIHtcclxuICAgIHJldHVybiB0aGlzLmNhbnZhcy53aWR0aFxyXG4gIH1cclxuXHJcbiAgZ2V0IGhlaWdodCgpOiBudW1iZXJcclxuICB7XHJcbiAgICByZXR1cm4gdGhpcy5jYW52YXMuaGVpZ2h0XHJcbiAgfVxyXG5cclxuICBhZGRHYW1lT2JqZWN0KG9iajogb2JqZWN0LCBiZWZvcmU6IG9iamVjdCB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZCwgYWZ0ZXI6IG9iamVjdCB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZCk6IHZvaWRcclxuICB7XHJcbiAgICBpZiAoYmVmb3JlKVxyXG4gICAge1xyXG4gICAgICBjb25zdCBpbmRleCA9IHRoaXMuZGlzcGxheUxpc3QuaW5kZXhPZihiZWZvcmUpXHJcbiAgICAgIHRoaXMuZGlzcGxheUxpc3Quc3BsaWNlKGluZGV4IC0gMSwgMCwgb2JqKVxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoYWZ0ZXIpXHJcbiAgICB7XHJcbiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5kaXNwbGF5TGlzdC5pbmRleE9mKGFmdGVyKVxyXG4gICAgICB0aGlzLmRpc3BsYXlMaXN0LnNwbGljZShpbmRleCwgMCwgb2JqKVxyXG4gICAgfVxyXG4gICAgZWxzZVxyXG4gICAge1xyXG4gICAgICB0aGlzLmRpc3BsYXlMaXN0LnB1c2gob2JqKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYWRkQ29sbGlkZXIoYTogR2FtZU9iamVjdCB8IEdhbWVPYmplY3RbXSwgYjogR2FtZU9iamVjdCB8IEdhbWVPYmplY3RbXSwgY2FsbGJhY2s6IENvbGxpc2lvbkNhbGxiYWNrRm4pXHJcbiAge1xyXG4gICAgYSA9IEFycmF5LmlzQXJyYXkoYSkgPyBhIDogWyBhIF1cclxuICAgIGIgPSBBcnJheS5pc0FycmF5KGIpID8gYiA6IFsgYiBdXHJcbiAgICBjb25zdCBjb2xsaWRlciA9IG5ldyBDb2xsaWRlcihhLCBiLCBjYWxsYmFjaylcclxuICAgIHRoaXMuY29sbGlkZXJzLnB1c2goY29sbGlkZXIpXHJcbiAgICByZXR1cm4gY29sbGlkZXJcclxuICB9XHJcblxyXG4gIGRlc3Ryb3lHYW1lT2JqZWN0KG9iajogYW55KTogdm9pZFxyXG4gIHtcclxuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5kaXNwbGF5TGlzdC5pbmRleE9mKG9iailcclxuXHJcbiAgICBpZiAob2JqLnBvb2xlZClcclxuICAgIHtcclxuICAgICAgb2JqLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGluZGV4ID49IDApXHJcbiAgICB7XHJcbiAgICAgIHRoaXMuZGlzcGxheUxpc3Quc3BsaWNlKGluZGV4LCAxKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY3JlYXRlKClcclxuICB7XHJcbiAgICB0aGlzLnNoaXAgPSBuZXcgU2hpcCh0aGlzLCB0aGlzLndpZHRoIC8gMiwgdGhpcy5oZWlnaHQgLyAyKVxyXG5cclxuICAgIHRoaXMuYWRkR2FtZU9iamVjdChuZXcgU3RhckJhY2tncm91bmQodGhpcykpXHJcblxyXG4gICAgLy8gQ3JlYXRlIHJvY2tzXHJcbiAgICBmb3IgKGxldCBjb3VudDogbnVtYmVyID0gMDsgY291bnQgPCBNQVhfUk9DS19DT1VOVDsgY291bnQrKylcclxuICAgIHtcclxuICAgICAgY29uc3Qgcm9jazogUm9jayA9IG5ldyBSb2NrKHRoaXMsIFJORC5iZXR3ZWVuKDAsIHRoaXMud2lkdGgpLCBSTkQuYmV0d2VlbigwLCB0aGlzLmhlaWdodCkpXHJcbiAgICAgIHRoaXMuYWRkR2FtZU9iamVjdChyb2NrKVxyXG4gICAgICB0aGlzLnJvY2tzLnB1c2gocm9jaylcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmFkZEdhbWVPYmplY3QodGhpcy5zaGlwKVxyXG5cclxuICAgIHRoaXMuYWRkQ29sbGlkZXIodGhpcy5zaGlwLCB0aGlzLnJvY2tzLCB0aGlzLm9uU2hpcENyYXNoLmJpbmQodGhpcykpXHJcbiAgICB0aGlzLmFkZENvbGxpZGVyKHRoaXMuYnVsbGV0cywgdGhpcy5yb2NrcywgdGhpcy5vbkJ1bGxldEhpdFJvY2suYmluZCh0aGlzKSlcclxuICB9XHJcblxyXG4gIGRlc3Ryb3koKVxyXG4gIHtcclxuICAgIHRoaXMuaW5wdXQuZGVzdHJveSgpXHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZGVsdGE6IG51bWJlcilcclxuICB7XHJcbiAgICAvLyBUdXJuIHNoaXAgdG93YXJkcyB0aGUgcG9pbnRlciBsb2NhdGlvblxyXG4gICAgY29uc3Qgc2hpcCA9IHRoaXMuc2hpcCBhcyBTaGlwXHJcblxyXG4gICAgaWYgKHRoaXMuaW5wdXQuY2hhbmdlZClcclxuICAgIHtcclxuICAgICAgc2hpcC50dXJuKHRoaXMuaW5wdXQudHVybilcclxuICAgICAgc2hpcC50dXJuVG8obnVsbClcclxuXHJcbiAgICAgIGlmICgxID09PSB0aGlzLmlucHV0LmFjY2VsZXJhdGUpXHJcbiAgICAgIHtcclxuICAgICAgICBzaGlwLmFjY2VsZXJhdGUoKVxyXG4gICAgICB9XHJcbiAgICAgIGVsc2UgaWYgKC0xID09PSB0aGlzLmlucHV0LmFjY2VsZXJhdGUpXHJcbiAgICAgIHtcclxuICAgICAgICBzaGlwLmJyYWtlKClcclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmICh0cnVlID09PSB0aGlzLmlucHV0LnNob290KVxyXG4gICAgICB7XHJcbiAgICAgICAgaWYgKHNoaXAuZmlyZSgpKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGNvbnN0IHZlbG9jaXR5ID0gbmV3IFZlY3RvcjJEKDYwMCwgMClcclxuICAgICAgICAgIC8vIHZlbG9jaXR5LnNldFRvUG9sYXIoODAwLCBzaGlwLnJhZGlhbnMpXHJcbiAgICAgICAgICB2ZWxvY2l0eS5yb3RhdGUoc2hpcC5yYWRpYW5zKVxyXG4gICAgICAgICAgY29uc3QgYnVsbGV0ID0gbmV3IEJ1bGxldCh0aGlzLCBzaGlwLnBvc2l0aW9uLngsIHNoaXAucG9zaXRpb24ueSwgdmVsb2NpdHkpXHJcbiAgICAgICAgICB0aGlzLmJ1bGxldHMucHVzaChidWxsZXQpXHJcbiAgICAgICAgICB0aGlzLmFkZEdhbWVPYmplY3QoYnVsbGV0LCBzaGlwKVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlucHV0LnNob290ID0gZmFsc2VcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmlucHV0LmNoYW5nZWQgPSBmYWxzZVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLmlucHV0LnR1cm5Ub01vdXNlICYmIHRoaXMuaW5wdXQucG9pbnRlci5pbilcclxuICAgIHtcclxuICAgICAgY29uc3QgYW5nbGUgPSBNLkFuZ2xlLmJldHdlZW4oc2hpcC5wb3NpdGlvbiwgdGhpcy5pbnB1dC5wb2ludGVyKVxyXG4gICAgICBzaGlwLnR1cm5UbyhhbmdsZSlcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBleHBpcmVkOiBudW1iZXJbXSA9IFtdXHJcbiAgICB0aGlzLmV4cGxvc2lvbnMuZm9yRWFjaCgoZSwgaW5kZXgpID0+IHtcclxuICAgICAgZS51cGRhdGUoZGVsdGEsIHRoaXMuY2FudmFzKVxyXG4gICAgICBpZiAoZmFsc2UgPT09IGUuYWN0aXZlKVxyXG4gICAgICB7XHJcbiAgICAgICAgZXhwaXJlZC5wdXNoKGluZGV4KVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgZXhwaXJlZC5mb3JFYWNoKGkgPT4gdGhpcy5leHBsb3Npb25zLnNwbGljZShpLCAxKSlcclxuXHJcbiAgICB0aGlzLmNvbGxpZGVycy5mb3JFYWNoKGNvbGxpZGVyID0+IHtcclxuICAgICAgY29sbGlkZXIuY2hlY2soKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIHJlbmRlcihkZWx0YTogbnVtYmVyKTogdm9pZFxyXG4gIHtcclxuICAgIGNvbnN0IGNvbnRleHQgPSB0aGlzLmNvbnRleHQgYXMgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEXHJcbiAgICBjb250ZXh0LmNsZWFyUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KVxyXG5cclxuICAgIHRoaXMuZXhwbG9zaW9ucy5mb3JFYWNoKGUgPT4gZS5yZW5kZXIoY29udGV4dCkpXHJcblxyXG4gICAgdGhpcy5kaXNwbGF5TGlzdC5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICBpdGVtLnVwZGF0ZShkZWx0YSlcclxuICAgICAgaXRlbS5yZW5kZXIodGhpcy5jb250ZXh0KVxyXG4gICAgfSlcclxuXHJcbiAgICBjb25zdCBzaGlwID0gdGhpcy5zaGlwIGFzIFNoaXBcclxuXHJcbiAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmZmZmJ1xyXG4gICAgY29udGV4dC5mb250ID0gJ25vcm1hbCAxMnB4IG1vbm9zcGFjZSdcclxuICAgIGNvbnN0IGxpbmVzOiBzdHJpbmdbXSA9IFtcclxuICAgICAgYE1vdXNlICAgICR7dGhpcy5pbnB1dC5wb2ludGVyLngudG9GaXhlZCgyKX0sICR7dGhpcy5pbnB1dC5wb2ludGVyLnkudG9GaXhlZCgyKX1gLFxyXG4gICAgICBgU3BlZWQgICAgJHtzaGlwLnNwZWVkLnRvRml4ZWQoMil9LCAke3NoaXAudmVsb2NpdHkueC50b0ZpeGVkKDIpfSwgJHtzaGlwLnZlbG9jaXR5LnkudG9GaXhlZCgyKX1gLFxyXG4gICAgICBgUm90YXRpb24gJHtzaGlwLnJhZGlhbnMudG9GaXhlZCgyKX0sICR7TS5BbmdsZS50b1JhZGlhbnMoc2hpcC5yb3RhdGVUbyB8fCAwKS50b0ZpeGVkKDIpfSwgJHtzaGlwLnJvdGF0aW9uU3BlZWQudG9GaXhlZCgyKX1gLFxyXG4gICAgICBgV2VhcG9uICAgJHtzaGlwLndlYXBvbkNvb2xkb3duLnRvRml4ZWQoMil9YCxcclxuICAgICAgYENvbnRyb2xzICR7dGhpcy5pbnB1dC5hY2NlbGVyYXRlfSwgJHt0aGlzLmlucHV0LnR1cm59LCAke3RoaXMuaW5wdXQuc2hvb3R9YCxcclxuICAgICAgYFJlbmRlcmVyICR7dGhpcy5kaXNwbGF5TGlzdC5sZW5ndGh9YCxcclxuICAgIF1cclxuXHJcbiAgICBsaW5lcy5mb3JFYWNoKChzLCBpbmRleCkgPT4ge1xyXG4gICAgICBjb250ZXh0LmZpbGxUZXh0KHMsIDEyLCAxNCArIGluZGV4ICogMTIpXHJcbiAgICB9KVxyXG5cclxuXHJcbiAgICAvLyBkZWJ1Z1xyXG4gICAgLy8gdGhpcy5kaXNwbGF5TGlzdC5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgLy8gICBpZiAoaXRlbS5nZXRCb3VuZGluZ0JveClcclxuICAgIC8vICAge1xyXG4gICAgLy8gICAgIGNvbnN0IGJveCA9IGl0ZW0uZ2V0Qm91bmRpbmdCb3goKVxyXG4gICAgLy8gICAgIGNvbnRleHQuc3Ryb2tlU3R5bGUgPSAncHVycGxlJ1xyXG4gICAgLy8gICAgIGNvbnRleHQuc3Ryb2tlUmVjdChib3gubGVmdCwgYm94LnRvcCwgYm94LnJpZ2h0IC0gYm94LmxlZnQsIGJveC5ib3R0b20gLSBib3gudG9wKVxyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9KVxyXG4gIH1cclxuXHJcbiAgb25TaGlwQ3Jhc2goc2hpcDogR2FtZU9iamVjdCwgcm9jazogR2FtZU9iamVjdCk6IGJvb2xlYW5cclxuICB7XHJcbiAgICBzaGlwID0gc2hpcCBhcyBTaGlwXHJcblxyXG4gICAgLy8gY29uc29sZS5sb2coXCJTaGlwIGRhbWFnZWQhXCIpXHJcblxyXG4gICAgcmV0dXJuIHRydWVcclxuICB9XHJcblxyXG4gIG9uQnVsbGV0SGl0Um9jayhidWxsZXQ6IEdhbWVPYmplY3QsIHJvY2s6IEdhbWVPYmplY3QpOiBib29sZWFuXHJcbiAge1xyXG4gICAgdGhpcy5kZXN0cm95R2FtZU9iamVjdChidWxsZXQpXHJcbiAgICBjb25zdCBidWxsZXRJbmRleCA9IHRoaXMuYnVsbGV0cy5pbmRleE9mKGJ1bGxldCBhcyBCdWxsZXQpXHJcbiAgICB0aGlzLmJ1bGxldHMuc3BsaWNlKGJ1bGxldEluZGV4LCAxKVxyXG5cclxuICAgIGNvbnN0IGFSb2NrOiBSb2NrID0gcm9jayBhcyBSb2NrXHJcbiAgICB0aGlzLmRlc3Ryb3lHYW1lT2JqZWN0KHJvY2spXHJcbiAgICBjb25zdCByb2NrSW5kZXggPSB0aGlzLnJvY2tzLmluZGV4T2YoYVJvY2spXHJcbiAgICB0aGlzLnJvY2tzLnNwbGljZShyb2NrSW5kZXgsIDEpXHJcblxyXG4gICAgaWYgKGFSb2NrLnNpemUgPiA4KVxyXG4gICAge1xyXG4gICAgICAvLyBzcGF3biB0d28gcm9ja3MsIGhhbGYgdGhlIHNpemVcclxuICAgICAgY29uc3Qgc2l6ZSA9IE1hdGgubWF4KGFSb2NrLnNpemUgLyAyLCA4KVxyXG4gICAgICBjb25zdCByb2NrczogUm9ja1tdID0gW1xyXG4gICAgICAgIG5ldyBSb2NrKHRoaXMsIHJvY2sucG9zaXRpb24ueCwgcm9jay5wb3NpdGlvbi55LCBzaXplKSxcclxuICAgICAgICBuZXcgUm9jayh0aGlzLCByb2NrLnBvc2l0aW9uLngsIHJvY2sucG9zaXRpb24ueSwgc2l6ZSlcclxuICAgICAgXVxyXG5cclxuICAgICAgcm9ja3MuZm9yRWFjaChyb2NrID0+IHtcclxuICAgICAgICB0aGlzLmFkZEdhbWVPYmplY3Qocm9jaylcclxuICAgICAgICB0aGlzLnJvY2tzLnB1c2gocm9jaylcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZXhwbG9zaW9uID0gbmV3IEV4cGxvc2lvbihyb2NrLnBvc2l0aW9uLngsIHJvY2sucG9zaXRpb24ueSwgYVJvY2suc2l6ZSAvIDIpXHJcbiAgICB0aGlzLmV4cGxvc2lvbnMucHVzaChleHBsb3Npb24pXHJcblxyXG4gICAgcmV0dXJuIHRydWVcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFNjZW5lIGZyb20gJy4vc2NlbmUnXHJcbmltcG9ydCB7IEJveCwgR2FtZU9iamVjdCB9IGZyb20gJy4vZ2FtZW9iamVjdCdcclxuaW1wb3J0IFZlY3RvcjJEIGZyb20gJy4vdmVjdG9yMmQnXHJcbmltcG9ydCBNIGZyb20gJy4vbWF0aCdcclxuaW1wb3J0IHsgVGhydXN0ZXIgfSBmcm9tICcuL3BhcnRpY2xlZW1pdHRlcidcclxuXHJcbmNvbnN0IFNISVBfTUFYSU1VTV9TUEVFRCA9IDUwMFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hpcCBpbXBsZW1lbnRzIEdhbWVPYmplY3Rcclxue1xyXG4gIHNjZW5lOiBTY2VuZVxyXG4gIGFjdGl2ZTogYm9vbGVhblxyXG4gIHBvc2l0aW9uOiBWZWN0b3IyRFxyXG4gIHZlbG9jaXR5OiBWZWN0b3IyRFxyXG4gIC8qKiBBbmdsZSBpbiBkZWdyZWVzICovXHJcbiAgX2FuZ2xlOiBudW1iZXJcclxuICBzcGVlZDogbnVtYmVyXHJcbiAgc2l6ZTogbnVtYmVyXHJcbiAgdGhydXN0ZXI6IFRocnVzdGVyXHJcblxyXG4gIHJvdGF0ZVRvOiBudW1iZXIgfCBudWxsXHJcbiAgcm90YXRpb25TcGVlZDogbnVtYmVyXHJcblxyXG4gIHdlYXBvbkNvb2xkb3duOiBudW1iZXJcclxuXHJcbiAgY29uc3RydWN0b3Ioc2NlbmU6IFNjZW5lLCB4OiBudW1iZXIsIHk6IG51bWJlciwgc2l6ZTogbnVtYmVyID0gMjApXHJcbiAge1xyXG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lXHJcbiAgICB0aGlzLmFjdGl2ZSA9IHRydWVcclxuICAgIHRoaXMucG9zaXRpb24gPSBuZXcgVmVjdG9yMkQoeCwgeSlcclxuICAgIHRoaXMudmVsb2NpdHkgPSBuZXcgVmVjdG9yMkQoMCwgMClcclxuICAgIHRoaXMuc2l6ZSA9IHNpemVcclxuICAgIHRoaXMuX2FuZ2xlID0gMFxyXG4gICAgdGhpcy5zcGVlZCA9IDI1XHJcbiAgICB0aGlzLnRocnVzdGVyID0gbmV3IFRocnVzdGVyKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55LCAzLCAxODAsIDAuMDUsIFsyMDAsIDIwMCwgMjAwLCAxXSlcclxuICAgIHRoaXMudGhydXN0ZXIuYnVybiA9IGZhbHNlXHJcblxyXG4gICAgdGhpcy5yb3RhdGVUbyA9IG51bGxcclxuICAgIHRoaXMucm90YXRpb25TcGVlZCA9IDBcclxuXHJcbiAgICB0aGlzLndlYXBvbkNvb2xkb3duID0gMFxyXG4gIH1cclxuXHJcbiAgZ2V0IGFuZ2xlKCk6IG51bWJlclxyXG4gIHtcclxuICAgIHJldHVybiB0aGlzLl9hbmdsZVxyXG4gIH1cclxuXHJcbiAgZ2V0IHJhZGlhbnMoKTogbnVtYmVyXHJcbiAge1xyXG4gICAgcmV0dXJuIE0uQW5nbGUudG9SYWRpYW5zKHRoaXMuYW5nbGUpXHJcbiAgfVxyXG5cclxuICAvLyBjb250cm9sIGludGVyZmFjZVxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGRpcmVjdGlvbiBwb3NpdGl2ZSByaWdodCwgbmVnYXRpdmUgbGVmdFxyXG4gICAqL1xyXG4gIHR1cm4oZGlyZWN0aW9uOiBudW1iZXIpXHJcbiAge1xyXG4gICAgc3dpdGNoIChkaXJlY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgIGNhc2UgLTE6XHJcbiAgICAgIHtcclxuICAgICAgICB0aGlzLnJvdGF0aW9uU3BlZWQgPSAtNVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIH1cclxuICAgICAgY2FzZSAwOlxyXG4gICAgICB7XHJcbiAgICAgICAgdGhpcy5yb3RhdGlvblNwZWVkID0gMFxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIH1cclxuICAgICAgY2FzZSAxOlxyXG4gICAgICB7XHJcbiAgICAgICAgdGhpcy5yb3RhdGlvblNwZWVkID0gNVxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHBhcmFtIGFuZ2xlIHRhcmdldCBhbmdsZSBpbiBkZWdyZWVzXHJcbiAgICovXHJcbiAgdHVyblRvKGFuZ2xlOiBudW1iZXIgfCBudWxsKVxyXG4gIHtcclxuICAgIHRoaXMucm90YXRlVG8gPSBhbmdsZVxyXG4gIH1cclxuXHJcbiAgYWNjZWxlcmF0ZSgpXHJcbiAge1xyXG4gICAgY29uc3QgeEFjYyA9IE1hdGguY29zKHRoaXMucmFkaWFucykgKiB0aGlzLnNwZWVkXHJcbiAgICBpZiAoKHhBY2MgPiAwICYmIHRoaXMudmVsb2NpdHkueCA8IDMwMCkgfHwgKHhBY2MgPCAwICYmIHRoaXMudmVsb2NpdHkueCA+IC0zMDApKVxyXG4gICAge1xyXG4gICAgICB0aGlzLnZlbG9jaXR5LnggKz0geEFjY1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHlBY2MgPSBNYXRoLnNpbih0aGlzLnJhZGlhbnMpICogdGhpcy5zcGVlZFxyXG4gICAgaWYgKCh5QWNjID4gMCAmJiB0aGlzLnZlbG9jaXR5LnkgPCAzMDApIHx8ICh5QWNjIDwgMCAmJiB0aGlzLnZlbG9jaXR5LnkgPiAtMzAwKSlcclxuICAgIHtcclxuICAgICAgdGhpcy52ZWxvY2l0eS55ICs9IHlBY2NcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGJyYWtlKClcclxuICB7XHJcbiAgICBpZiAodGhpcy52ZWxvY2l0eS54ID4gMC4xKVxyXG4gICAge1xyXG4gICAgICB0aGlzLnZlbG9jaXR5LnggLT0gTWF0aC5jb3ModGhpcy5yYWRpYW5zKSAqIHRoaXMuc3BlZWQ7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0aGlzLnZlbG9jaXR5LnggPCAtMC4xKVxyXG4gICAge1xyXG4gICAgICB0aGlzLnZlbG9jaXR5LnggKz0gTWF0aC5jb3ModGhpcy5yYWRpYW5zKSAqIHRoaXMuc3BlZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMudmVsb2NpdHkueSA+IDAuMSlcclxuICAgIHtcclxuICAgICAgdGhpcy52ZWxvY2l0eS55IC09IE1hdGguc2luKHRoaXMucmFkaWFucykgKiB0aGlzLnNwZWVkO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAodGhpcy52ZWxvY2l0eS55IDwgLTAuMSlcclxuICAgIHtcclxuICAgICAgdGhpcy52ZWxvY2l0eS55ICs9IE1hdGguc2luKHRoaXMucmFkaWFucykgKiB0aGlzLnNwZWVkO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZmlyZSgpXHJcbiAge1xyXG4gICAgY29uc3Qgb2sgPSB0aGlzLndlYXBvbkNvb2xkb3duID09PSAwXHJcbiAgICBpZiAob2spXHJcbiAgICB7XHJcbiAgICAgIHRoaXMud2VhcG9uQ29vbGRvd24gPSAuMTI1XHJcbiAgICB9XHJcbiAgICByZXR1cm4gb2tcclxuICB9XHJcblxyXG4gIHNldCBhbmdsZShhbmdsZTogbnVtYmVyKVxyXG4gIHtcclxuICAgIHRoaXMuX2FuZ2xlID0gYW5nbGUgLy8gTS53cmFwKGFuZ2xlLCAwLCAzNjApXHJcbiAgfVxyXG5cclxuICBnZXRCb3VuZGluZ0JveCgpOiBCb3hcclxuICB7XHJcbiAgICBjb25zdCB4ID0gdGhpcy5wb3NpdGlvbi54XHJcbiAgICBjb25zdCB5ID0gdGhpcy5wb3NpdGlvbi55XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB4LFxyXG4gICAgICB5LFxyXG4gICAgICB0b3A6IHkgLSB0aGlzLnNpemUgLyAyLFxyXG4gICAgICByaWdodDogeCArIHRoaXMuc2l6ZSxcclxuICAgICAgYm90dG9tOiB5ICsgdGhpcy5zaXplIC8gMixcclxuICAgICAgbGVmdDogeCAtIHRoaXMuc2l6ZSAvIDIsXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZGVsdGE6IG51bWJlcik6IHZvaWRcclxuICB7XHJcbiAgICAvLyB1cGRhdGUgYW5nbGUgYnkgdHVybiBzcGVlZFxyXG4gICAgaWYgKHRoaXMucm90YXRpb25TcGVlZCAhPSAwKVxyXG4gICAge1xyXG4gICAgICB0aGlzLmFuZ2xlICs9IHRoaXMucm90YXRpb25TcGVlZFxyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAodGhpcy5yb3RhdGVUbyAhPSBudWxsKVxyXG4gICAge1xyXG4gICAgICB0aGlzLmFuZ2xlID0gTS5BbmdsZS50b0RlZ3JlZXMoTS5BbmdsZS5yb3RhdGVUbyh0aGlzLnJhZGlhbnMsIE0uQW5nbGUudG9SYWRpYW5zKHRoaXMucm90YXRlVG8pKSlcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLndlYXBvbkNvb2xkb3duID0gTS5kZWModGhpcy53ZWFwb25Db29sZG93biwgZGVsdGEsIDApXHJcblxyXG4gICAgLy8gdXBkYXRlIHZlbG9jaXR5IGJ5IHNwZWVkXHJcbiAgICBjb25zdCB2ZWxvY2l0eSA9IHRoaXMudmVsb2NpdHkuY2xvbmUoKS5tdWx0aXBseShkZWx0YSwgZGVsdGEpXHJcbiAgICB0aGlzLnBvc2l0aW9uLmFkZCh2ZWxvY2l0eSlcclxuXHJcbiAgICB0aGlzLnBvc2l0aW9uLnggPSBNLndyYXAodGhpcy5wb3NpdGlvbi54LCAtKHRoaXMuc2l6ZSAqIDIpLCB0aGlzLnNjZW5lLmNhbnZhcy53aWR0aCArICh0aGlzLnNpemUgKiAyKSlcclxuICAgIHRoaXMucG9zaXRpb24ueSA9IE0ud3JhcCh0aGlzLnBvc2l0aW9uLnksIC0odGhpcy5zaXplICogMiksIHRoaXMuc2NlbmUuY2FudmFzLmhlaWdodCArICh0aGlzLnNpemUgKiAyKSlcclxuXHJcbiAgICB0aGlzLnRocnVzdGVyLmJ1cm4gPSAodmVsb2NpdHkueCAhPT0gMCAmJiB2ZWxvY2l0eS55ICE9PSAwKVxyXG4gICAgdGhpcy50aHJ1c3Rlci5hbmdsZSA9IDE4MCArIHRoaXMuYW5nbGVcclxuICAgIHRoaXMudGhydXN0ZXIucG9zaXRpb24ueCA9IHRoaXMucG9zaXRpb24ueFxyXG4gICAgdGhpcy50aHJ1c3Rlci5wb3NpdGlvbi55ID0gdGhpcy5wb3NpdGlvbi55XHJcbiAgICB0aGlzLnRocnVzdGVyLnVwZGF0ZShkZWx0YSwgdGhpcy5zY2VuZS5jYW52YXMpXHJcbiAgfVxyXG5cclxuICByZW5kZXIoY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEKTogdm9pZFxyXG4gIHtcclxuICAgIGNvbnN0IHBvaW50czogQXJyYXk8VmVjdG9yMkQ+ID0gW1xyXG4gICAgICBuZXcgVmVjdG9yMkQodGhpcy5zaXplLCAwKSxcclxuICAgICAgbmV3IFZlY3RvcjJEKC0odGhpcy5zaXplIC8gMiksIHRoaXMuc2l6ZSAvIDIpLFxyXG4gICAgICBuZXcgVmVjdG9yMkQoLSh0aGlzLnNpemUgLyAyKSwgLSh0aGlzLnNpemUgLyAyKSksXHJcbiAgICBdXHJcblxyXG4gICAgdGhpcy50aHJ1c3Rlci5yZW5kZXIoY29udGV4dClcclxuXHJcbiAgICBjb250ZXh0LnNhdmUoKVxyXG4gICAgY29udGV4dC5zdHJva2VTdHlsZSA9ICcjYWFhYWFhJ1xyXG4gICAgY29udGV4dC5maWxsU3R5bGUgPSAnIzk5OTk5OSdcclxuXHJcbiAgICAvLyBjb250ZXh0LnRyYW5zbGF0ZSh0aGlzLnBvc2l0aW9uLnggKyAodGhpcy5zaXplIC8gMiksIHRoaXMucG9zaXRpb24ueSArICh0aGlzLnNpemUgLyAyKSlcclxuICAgIGNvbnRleHQudHJhbnNsYXRlKHRoaXMucG9zaXRpb24ueCwgdGhpcy5wb3NpdGlvbi55KVxyXG4gICAgY29udGV4dC5yb3RhdGUodGhpcy5yYWRpYW5zKVxyXG5cclxuICAgIGNvbnRleHQuYmVnaW5QYXRoKClcclxuICAgIGNvbnRleHQubW92ZVRvKHBvaW50c1swXS54LCBwb2ludHNbMF0ueSlcclxuICAgIGNvbnRleHQubGluZVRvKHBvaW50c1sxXS54LCBwb2ludHNbMV0ueSlcclxuICAgIGNvbnRleHQubGluZVRvKHBvaW50c1syXS54LCBwb2ludHNbMl0ueSlcclxuICAgIGNvbnRleHQuY2xvc2VQYXRoKClcclxuICAgIGNvbnRleHQuc3Ryb2tlKClcclxuICAgIGNvbnRleHQuZmlsbCgpXHJcblxyXG4gICAgLy8gY2VudGVyIHBvaW50XHJcbiAgICAvLyBjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmZmZmJ1xyXG4gICAgLy8gY29udGV4dC5maWxsUmVjdCgtMSwgLTEsIDIsIDIpXHJcblxyXG4gICAgY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMClcclxuICAgIGNvbnRleHQucmVzdG9yZSgpXHJcbiAgfVxyXG59IiwiaW1wb3J0IFNjZW5lIGZyb20gJy4vc2NlbmUnXHJcbmltcG9ydCBSTkQgZnJvbSAnLi9ybmQnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGFyQmFja2dyb3VuZFxyXG57XHJcbiAgc2NlbmU6IFNjZW5lXHJcbiAgc3RhcnM6IEFycmF5PGFueT5cclxuXHJcbiAgY29uc3RydWN0b3Ioc2NlbmU6IFNjZW5lKVxyXG4gIHtcclxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxyXG4gICAgdGhpcy5zdGFycyA9IFtdXHJcbiAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgMzAwOyBpbmRleCsrKVxyXG4gICAge1xyXG4gICAgICBjb25zdCBzaXplID0gUk5ELmJldHdlZW4oMSwgMilcclxuICAgICAgY29uc3QgYWxwaGEgPSBSTkQuZmxvYXRCZXR3ZWVuKDAuMSwgMSlcclxuICAgICAgY29uc3QgeCA9IFJORC5iZXR3ZWVuKDAsIHNjZW5lLndpZHRoKVxyXG4gICAgICBjb25zdCB5ID0gUk5ELmJldHdlZW4oMCwgc2NlbmUuaGVpZ2h0KVxyXG4gICAgICBjb25zdCBjb2xvciA9IFJORC5waWNrKFsgJzI1NSwgMjU1LCAyNTUnLCAnMTI4LCAwLCAxMjgnLCAnMzQsIDM0LCAxNTMnIF0pXHJcbiAgICAgIC8vIGNvbnN0IGNvbG9yID0gcGljayhbIDB4ZmZmZmZmLCAweDgwMDA4MCwgMHgyMjIyOTkgXSlcclxuXHJcbiAgICAgIHRoaXMuc3RhcnMucHVzaCh7XHJcbiAgICAgICAgeCxcclxuICAgICAgICB5LFxyXG4gICAgICAgIHNpemUsXHJcbiAgICAgICAgY29sb3IsXHJcbiAgICAgICAgYWxwaGFcclxuICAgICAgfSlcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVwZGF0ZShkZWx0YTogbnVtYmVyKTogdm9pZFxyXG4gIHtcclxuICAgIC8vIFRPRE8gY2hhbmdlIHRoZSBzdGFydHMgYSBsaXR0bGVcclxuICB9XHJcblxyXG4gIHJlbmRlcigpOiB2b2lkXHJcbiAge1xyXG4gICAgY29uc3QgY29udGV4dCA9IHRoaXMuc2NlbmUuY29udGV4dCBhcyBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkRcclxuXHJcbiAgICBjb250ZXh0LnNhdmUoKVxyXG5cclxuICAgIHRoaXMuc3RhcnMuZm9yRWFjaChzdGFyID0+IHtcclxuICAgICAgY29udGV4dC5maWxsU3R5bGUgPSBgcmdiYSgke3N0YXIuY29sb3J9LCAke3N0YXIuYWxwaGF9KWBcclxuICAgICAgY29udGV4dC5maWxsUmVjdChzdGFyLngsIHN0YXIueSwgc3Rhci5zaXplLCBzdGFyLnNpemUpXHJcbiAgICB9KVxyXG5cclxuICAgIGNvbnRleHQucmVzdG9yZSgpXHJcbiAgfVxyXG59XHJcbiIsIlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWZWN0b3IyRFxyXG57XHJcbiAgeDogbnVtYmVyXHJcbiAgeTogbnVtYmVyXHJcblxyXG4gIGNvbnN0cnVjdG9yKHg6IG51bWJlciA9IDAsIHk6IG51bWJlciA9IDApXHJcbiAge1xyXG4gICAgdGhpcy54ID0geFxyXG4gICAgdGhpcy55ID0geVxyXG4gIH1cclxuXHJcbiAgY2xvbmUoKTogVmVjdG9yMkRcclxuICB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJEKHRoaXMueCwgdGhpcy55KVxyXG4gIH1cclxuXHJcbiAgc2V0KHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZFxyXG4gIHtcclxuICAgIHRoaXMueCA9IHhcclxuICAgIHRoaXMueSA9IHlcclxuICB9XHJcblxyXG4gIGFkZCh4OiBudW1iZXIgfCBWZWN0b3IyRCwgeTogbnVtYmVyIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkKTogdGhpc1xyXG4gIHtcclxuICAgIGlmICh5ID09PSB1bmRlZmluZWQpXHJcbiAgICB7XHJcbiAgICAgIHkgPSAoeCBhcyBWZWN0b3IyRCkueVxyXG4gICAgICB4ID0gKHggYXMgVmVjdG9yMkQpLnhcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnggKz0geCBhcyBudW1iZXJcclxuICAgIHRoaXMueSArPSB5IGFzIG51bWJlclxyXG5cclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG5cclxuICBtdWx0aXBseSh4OiBudW1iZXIgfCBWZWN0b3IyRCwgeTogbnVtYmVyIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkKTogdGhpc1xyXG4gIHtcclxuICAgIGlmICh5ID09PSB1bmRlZmluZWQpXHJcbiAgICB7XHJcbiAgICAgIHkgPSAoeCBhcyBWZWN0b3IyRCkueVxyXG4gICAgICB4ID0gKHggYXMgVmVjdG9yMkQpLnhcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnggKj0geCBhcyBudW1iZXJcclxuICAgIHRoaXMueSAqPSB5IGFzIG51bWJlclxyXG5cclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG5cclxuICByb3RhdGUocmFkaWFuczogbnVtYmVyKVxyXG4gIHtcclxuICAgIGNvbnN0IGNvcyA9IE1hdGguY29zKHJhZGlhbnMpO1xyXG4gICAgY29uc3Qgc2luID0gTWF0aC5zaW4ocmFkaWFucyk7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuc2V0KGNvcyAqIHRoaXMueCAtIHNpbiAqIHRoaXMueSwgc2luICogdGhpcy54ICsgY29zICogdGhpcy55KTtcclxuICB9XHJcblxyXG4gIHNldFRvUG9sYXIoYXppbXV0aDogbnVtYmVyLCByYWRpdXM6IG51bWJlciA9IDEpOiB0aGlzXHJcbiAge1xyXG4gICAgdGhpcy54ID0gTWF0aC5jb3MoYXppbXV0aCkgKiByYWRpdXNcclxuICAgIHRoaXMueSA9IE1hdGguc2luKGF6aW11dGgpICogcmFkaXVzXHJcblxyXG4gICAgcmV0dXJuIHRoaXNcclxuICB9XHJcbn0iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIl0sIm5hbWVzIjpbImNhbnZhcyIsInRoaXMiLCJzY2VuZSIsImFuaW1hdGlvbkZyYW1lSWQiLCJsYXN0RnJhbWVUaW1lIiwib25GcmFtZSIsImJpbmQiLCJyZXNpemUiLCJzaXplIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJwbGF5IiwiY3JlYXRlIiwidGltZSIsImRlbHRhIiwidXBkYXRlIiwicmVuZGVyIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwic3RvcCIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwieCIsInkiLCJ2ZWxvY2l0eSIsImFjdGl2ZSIsInBvb2xlZCIsInBvc2l0aW9uIiwiZ2V0Qm91bmRpbmdCb3giLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJjbG9uZSIsIm11bHRpcGx5IiwiYWRkIiwic2l6ZTIiLCJkZXN0cm95R2FtZU9iamVjdCIsImNvbnRleHQiLCJzYXZlIiwiZmlsbFN0eWxlIiwiYmVnaW5QYXRoIiwiYXJjIiwiZmlsbCIsImNsb3NlUGF0aCIsInJlc3RvcmUiLCJwb2ludGVyIiwiaW4iLCJ0dXJuVG9Nb3VzZSIsInR1cm4iLCJhY2NlbGVyYXRlIiwic2hvb3QiLCJjaGFuZ2VkIiwidGFiSW5kZXgiLCJmb2N1cyIsIm9uTW91c2VEb3duIiwib25Nb3VzZUVudGVyIiwib25Nb3VzZUxlYXZlIiwib25Nb3VzZU1vdmUiLCJvbktleURvd24iLCJvbktleVVwIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJyZWN0Iiwic2NhbGVYIiwic2NhbGVZIiwiY2xpZW50WCIsImNsaWVudFkiLCJrZXkiLCJkZXN0cm95IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBJMiIsIk1hdGgiLCJQSSIsImluYyIsInZhbHVlIiwiYW1vdW50IiwibWF4IiwibWluIiwiZGVjIiwiY2xhbXAiLCJ3cmFwIiwiQW5nbGUiLCJ0b0RlZ3JlZXMiLCJyYWRpYW5zIiwidG9SYWRpYW5zIiwiZGVncmVlcyIsImJldHdlZW4iLCJhIiwiYiIsImF0YW4yIiwicm90YXRlVG8iLCJjdXJyZW50IiwidGFyZ2V0IiwibGVycCIsImFicyIsImFwcGx5RnJpY3Rpb24iLCJmcmljdGlvbiIsIm5lZ2F0aXZlIiwiY29sb3IiLCJsaWZlIiwicCIsIlBhcnRpY2xlIiwicmVzZXQiLCJzZXRQb3NpdGlvbiIsInNldFZlbG9jaXR5Iiwic2V0RnJpY3Rpb24iLCJjdHgiLCJhbHBoYSIsImludGVuc2l0eSIsInBhcnRpY2xlcyIsInBhcnRpY2xlQ291bnQiLCJhbmdsZVN0ZXAiLCJpIiwicmFkIiwiY29zIiwic2luIiwic3BlZWQiLCJmbG9hdEJldHdlZW4iLCJwdXNoIiwiZm9yRWFjaCIsIkJvb2xlYW4iLCJjb25zb2xlIiwibG9nIiwiRXhwbG9zaW9uIiwiYW5nbGUiLCJzcHJlYWQiLCJidXJuIiwicG9vbCIsImFkZFBhcnRpY2xlIiwiZGl0aGVyIiwibGVuZ3RoIiwicG9wIiwia2lsbCIsImluZGV4Iiwic3BsaWNlIiwiVGhydXN0ZXIiLCJmbG9vciIsInJhbmRvbSIsInBpY2siLCJjaG9pY2VzIiwicm90YXRpb25TcGVlZCIsInBvaW50cyIsInIiLCJ0b3RhbFBvaW50cyIsImNvdW50IiwicmFkaXVzIiwicG9pbnQiLCJwb2ludHNPbkNpcmNsZSIsImNyZWF0ZVBvbHlnb25Qb2ludHMiLCJtb3ZlbWVudCIsInN0cm9rZVN0eWxlIiwidHJhbnNsYXRlIiwicm90YXRlIiwibW92ZVRvIiwibGluZVRvIiwic3Ryb2tlIiwic2V0VHJhbnNmb3JtIiwiY2FsbGJhY2siLCJjaGVjayIsImFCb3giLCJiQm94Iiwib3ZlcmxhcHMiLCJnZXRDb250ZXh0IiwiaW5wdXQiLCJkaXNwbGF5TGlzdCIsInNoaXAiLCJyb2NrcyIsImJ1bGxldHMiLCJleHBsb3Npb25zIiwiY29sbGlkZXJzIiwiYWRkR2FtZU9iamVjdCIsIm9iaiIsImJlZm9yZSIsImFmdGVyIiwiaW5kZXhPZiIsImFkZENvbGxpZGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiY29sbGlkZXIiLCJDb2xsaWRlciIsInJvY2siLCJvblNoaXBDcmFzaCIsIm9uQnVsbGV0SGl0Um9jayIsInR1cm5UbyIsImJyYWtlIiwiZmlyZSIsImJ1bGxldCIsImV4cGlyZWQiLCJlIiwiY2xlYXJSZWN0IiwiaXRlbSIsImZvbnQiLCJ0b0ZpeGVkIiwid2VhcG9uQ29vbGRvd24iLCJzIiwiZmlsbFRleHQiLCJidWxsZXRJbmRleCIsImFSb2NrIiwicm9ja0luZGV4IiwiZXhwbG9zaW9uIiwiX2FuZ2xlIiwidGhydXN0ZXIiLCJkaXJlY3Rpb24iLCJ4QWNjIiwieUFjYyIsIm9rIiwic3RhcnMiLCJzdGFyIiwiZmlsbFJlY3QiLCJWZWN0b3IyRCIsInNldCIsInVuZGVmaW5lZCIsInNldFRvUG9sYXIiLCJhemltdXRoIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYXN0ZXJvaWRzIl0sInNvdXJjZVJvb3QiOiIifQ==